IMPORT ut,SALT28;
EXPORT Fields := MODULE
EXPORT SALT28.StrType FieldName(UNSIGNED2 i) := CHOOSE(i,'SHOW_KEY','ORDER_KEY','FOL_ORDER_KEY','CREATION_DT','ORDER_CREATOR_ID','ITEM_CREATE_DT','ITEM_CREATOR_ID','KEYVAL','ORDER_ITEM_NBR','EXHIBITOR_KEY','BILL_TO_KEY','BOOTH_KEY','BOOTH_ID','BOOTH_SORT','PRG_ACCT_BOOTH_IND','PRG_ACCT_CUST_IND','FACILITY_KEY','LOCATION_KEY','AREA_KEY','VOID_ORDER_IND','ORDER_DESCR','ORDER_COMMENT','CC_KEY','CC_TYPE','CC_LAST_FOUR_DIGITS','PARENT_INV_PART_NBR','PARENT_BOM_KEY','INV_PART_NBR','BOM_NBR','INVOICE_KEY','REV_LEVEL','TRANSACTION_KEY','QTY_MEN','TOTAL_TIME','QUANTITY','STD_PRICE','DIS_AMOUNT','DIS_PCT','UNIT_PRICE','EXT_PRICE','TAX_RATE','TAX_AMOUNT','TICKET_KEY','TICKET_TYPE','SUPEV_COMPANY','LBR_SUPERVISOR','CUSTOMER_CONTACT','CUSTOMER_PHONE','BILLED_IND','OPS_RELEASED_IND','LOCKED_IND','WIP_IND','COMPLETE_IND','TARGET_DT','EXPECTED_DT','COMPLETE_DT','COMMENTS','COMMENTS_BILLING','PRINTED_IND','GROUP_NBR','SUBGROUP_NBR','PART_NBR','CUSTOM_DESCR','PRICE_ITEM_DESCR','CSUS_EMP_NBR','CSUS_ACTION','CSUS_TRIGGER_PART','PART_WIDTH','PART_WIDTH_UOM','PART_LENGTH','PART_LENGTH_UOM','PART_SQ_FEET','DIM_EDITABLE_IND','TAX_IND','TELECOM_IND','LA_PARISH_TAX_IND','SELLABLE_IND','GST_TAXABLE_IND','HST_TAXABLE_IND','PST_TAXABLE_IND','GST_TAX_TAX_IND','UOM','MIN_QTY','CUST_TAX_EXEMPT_IND','CUST_GST_EXEMPT_IND','CUST_HST_EXEMPT_IND','CUST_PST_EXEMPT_IND','CUST_GLOBAL_EXEMPT_IND','CUSTOMER_TYPE','BILL_TO_NAME','BILL_TO_CREDIT_STATUS','EMS_ORDER_IND','USER_ID','LAST_UPDATE_DT','FET_SHIPMENT_NBR','MHA_KEY','MANUAL_MHA_NBR','DESTINATION','PIECES','WEIGHT','RECEIVER_IND','ACCOUNTING_CODE','SHOW_SITE_ORDER','SHOW_SITE_REVISION','ORDERWIP','FOL_ORDER_IND','ESS_ORDER_IND');
EXPORT FieldNum(SALT28.StrType fn) := CASE(fn,'SHOW_KEY' => 1,'ORDER_KEY' => 2,'FOL_ORDER_KEY' => 3,'CREATION_DT' => 4,'ORDER_CREATOR_ID' => 5,'ITEM_CREATE_DT' => 6,'ITEM_CREATOR_ID' => 7,'KEYVAL' => 8,'ORDER_ITEM_NBR' => 9,'EXHIBITOR_KEY' => 10,'BILL_TO_KEY' => 11,'BOOTH_KEY' => 12,'BOOTH_ID' => 13,'BOOTH_SORT' => 14,'PRG_ACCT_BOOTH_IND' => 15,'PRG_ACCT_CUST_IND' => 16,'FACILITY_KEY' => 17,'LOCATION_KEY' => 18,'AREA_KEY' => 19,'VOID_ORDER_IND' => 20,'ORDER_DESCR' => 21,'ORDER_COMMENT' => 22,'CC_KEY' => 23,'CC_TYPE' => 24,'CC_LAST_FOUR_DIGITS' => 25,'PARENT_INV_PART_NBR' => 26,'PARENT_BOM_KEY' => 27,'INV_PART_NBR' => 28,'BOM_NBR' => 29,'INVOICE_KEY' => 30,'REV_LEVEL' => 31,'TRANSACTION_KEY' => 32,'QTY_MEN' => 33,'TOTAL_TIME' => 34,'QUANTITY' => 35,'STD_PRICE' => 36,'DIS_AMOUNT' => 37,'DIS_PCT' => 38,'UNIT_PRICE' => 39,'EXT_PRICE' => 40,'TAX_RATE' => 41,'TAX_AMOUNT' => 42,'TICKET_KEY' => 43,'TICKET_TYPE' => 44,'SUPEV_COMPANY' => 45,'LBR_SUPERVISOR' => 46,'CUSTOMER_CONTACT' => 47,'CUSTOMER_PHONE' => 48,'BILLED_IND' => 49,'OPS_RELEASED_IND' => 50,'LOCKED_IND' => 51,'WIP_IND' => 52,'COMPLETE_IND' => 53,'TARGET_DT' => 54,'EXPECTED_DT' => 55,'COMPLETE_DT' => 56,'COMMENTS' => 57,'COMMENTS_BILLING' => 58,'PRINTED_IND' => 59,'GROUP_NBR' => 60,'SUBGROUP_NBR' => 61,'PART_NBR' => 62,'CUSTOM_DESCR' => 63,'PRICE_ITEM_DESCR' => 64,'CSUS_EMP_NBR' => 65,'CSUS_ACTION' => 66,'CSUS_TRIGGER_PART' => 67,'PART_WIDTH' => 68,'PART_WIDTH_UOM' => 69,'PART_LENGTH' => 70,'PART_LENGTH_UOM' => 71,'PART_SQ_FEET' => 72,'DIM_EDITABLE_IND' => 73,'TAX_IND' => 74,'TELECOM_IND' => 75,'LA_PARISH_TAX_IND' => 76,'SELLABLE_IND' => 77,'GST_TAXABLE_IND' => 78,'HST_TAXABLE_IND' => 79,'PST_TAXABLE_IND' => 80,'GST_TAX_TAX_IND' => 81,'UOM' => 82,'MIN_QTY' => 83,'CUST_TAX_EXEMPT_IND' => 84,'CUST_GST_EXEMPT_IND' => 85,'CUST_HST_EXEMPT_IND' => 86,'CUST_PST_EXEMPT_IND' => 87,'CUST_GLOBAL_EXEMPT_IND' => 88,'CUSTOMER_TYPE' => 89,'BILL_TO_NAME' => 90,'BILL_TO_CREDIT_STATUS' => 91,'EMS_ORDER_IND' => 92,'USER_ID' => 93,'LAST_UPDATE_DT' => 94,'FET_SHIPMENT_NBR' => 95,'MHA_KEY' => 96,'MANUAL_MHA_NBR' => 97,'DESTINATION' => 98,'PIECES' => 99,'WEIGHT' => 100,'RECEIVER_IND' => 101,'ACCOUNTING_CODE' => 102,'SHOW_SITE_ORDER' => 103,'SHOW_SITE_REVISION' => 104,'ORDERWIP' => 105,'FOL_ORDER_IND' => 106,'ESS_ORDER_IND' => 107,0);
//Individual field level validation
EXPORT Make_SHOW_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_SHOW_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_SHOW_KEY(UNSIGNED1 wh) := '';
EXPORT Make_ORDER_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_ORDER_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ORDER_KEY(UNSIGNED1 wh) := '';
EXPORT Make_FOL_ORDER_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_FOL_ORDER_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_FOL_ORDER_KEY(UNSIGNED1 wh) := '';
EXPORT Make_CREATION_DT(SALT28.StrType s0) := s0;
EXPORT InValid_CREATION_DT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CREATION_DT(UNSIGNED1 wh) := '';
EXPORT Make_ORDER_CREATOR_ID(SALT28.StrType s0) := s0;
EXPORT InValid_ORDER_CREATOR_ID(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ORDER_CREATOR_ID(UNSIGNED1 wh) := '';
EXPORT Make_ITEM_CREATE_DT(SALT28.StrType s0) := s0;
EXPORT InValid_ITEM_CREATE_DT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ITEM_CREATE_DT(UNSIGNED1 wh) := '';
EXPORT Make_ITEM_CREATOR_ID(SALT28.StrType s0) := s0;
EXPORT InValid_ITEM_CREATOR_ID(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ITEM_CREATOR_ID(UNSIGNED1 wh) := '';
EXPORT Make_KEYVAL(SALT28.StrType s0) := s0;
EXPORT InValid_KEYVAL(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_KEYVAL(UNSIGNED1 wh) := '';
EXPORT Make_ORDER_ITEM_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_ORDER_ITEM_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ORDER_ITEM_NBR(UNSIGNED1 wh) := '';
EXPORT Make_EXHIBITOR_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_EXHIBITOR_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_EXHIBITOR_KEY(UNSIGNED1 wh) := '';
EXPORT Make_BILL_TO_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_BILL_TO_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BILL_TO_KEY(UNSIGNED1 wh) := '';
EXPORT Make_BOOTH_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_BOOTH_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BOOTH_KEY(UNSIGNED1 wh) := '';
EXPORT Make_BOOTH_ID(SALT28.StrType s0) := s0;
EXPORT InValid_BOOTH_ID(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BOOTH_ID(UNSIGNED1 wh) := '';
EXPORT Make_BOOTH_SORT(SALT28.StrType s0) := s0;
EXPORT InValid_BOOTH_SORT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BOOTH_SORT(UNSIGNED1 wh) := '';
EXPORT Make_PRG_ACCT_BOOTH_IND(SALT28.StrType s0) := s0;
EXPORT InValid_PRG_ACCT_BOOTH_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PRG_ACCT_BOOTH_IND(UNSIGNED1 wh) := '';
EXPORT Make_PRG_ACCT_CUST_IND(SALT28.StrType s0) := s0;
EXPORT InValid_PRG_ACCT_CUST_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PRG_ACCT_CUST_IND(UNSIGNED1 wh) := '';
EXPORT Make_FACILITY_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_FACILITY_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_FACILITY_KEY(UNSIGNED1 wh) := '';
EXPORT Make_LOCATION_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_LOCATION_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_LOCATION_KEY(UNSIGNED1 wh) := '';
EXPORT Make_AREA_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_AREA_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_AREA_KEY(UNSIGNED1 wh) := '';
EXPORT Make_VOID_ORDER_IND(SALT28.StrType s0) := s0;
EXPORT InValid_VOID_ORDER_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_VOID_ORDER_IND(UNSIGNED1 wh) := '';
EXPORT Make_ORDER_DESCR(SALT28.StrType s0) := s0;
EXPORT InValid_ORDER_DESCR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ORDER_DESCR(UNSIGNED1 wh) := '';
EXPORT Make_ORDER_COMMENT(SALT28.StrType s0) := s0;
EXPORT InValid_ORDER_COMMENT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ORDER_COMMENT(UNSIGNED1 wh) := '';
EXPORT Make_CC_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_CC_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CC_KEY(UNSIGNED1 wh) := '';
EXPORT Make_CC_TYPE(SALT28.StrType s0) := s0;
EXPORT InValid_CC_TYPE(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CC_TYPE(UNSIGNED1 wh) := '';
EXPORT Make_CC_LAST_FOUR_DIGITS(SALT28.StrType s0) := s0;
EXPORT InValid_CC_LAST_FOUR_DIGITS(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CC_LAST_FOUR_DIGITS(UNSIGNED1 wh) := '';
EXPORT Make_PARENT_INV_PART_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_PARENT_INV_PART_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PARENT_INV_PART_NBR(UNSIGNED1 wh) := '';
EXPORT Make_PARENT_BOM_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_PARENT_BOM_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PARENT_BOM_KEY(UNSIGNED1 wh) := '';
EXPORT Make_INV_PART_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_INV_PART_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_INV_PART_NBR(UNSIGNED1 wh) := '';
EXPORT Make_BOM_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_BOM_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BOM_NBR(UNSIGNED1 wh) := '';
EXPORT Make_INVOICE_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_INVOICE_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_INVOICE_KEY(UNSIGNED1 wh) := '';
EXPORT Make_REV_LEVEL(SALT28.StrType s0) := s0;
EXPORT InValid_REV_LEVEL(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_REV_LEVEL(UNSIGNED1 wh) := '';
EXPORT Make_TRANSACTION_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_TRANSACTION_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TRANSACTION_KEY(UNSIGNED1 wh) := '';
EXPORT Make_QTY_MEN(SALT28.StrType s0) := s0;
EXPORT InValid_QTY_MEN(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QTY_MEN(UNSIGNED1 wh) := '';
EXPORT Make_TOTAL_TIME(SALT28.StrType s0) := s0;
EXPORT InValid_TOTAL_TIME(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TOTAL_TIME(UNSIGNED1 wh) := '';
EXPORT Make_QUANTITY(SALT28.StrType s0) := s0;
EXPORT InValid_QUANTITY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QUANTITY(UNSIGNED1 wh) := '';
EXPORT Make_STD_PRICE(SALT28.StrType s0) := s0;
EXPORT InValid_STD_PRICE(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_STD_PRICE(UNSIGNED1 wh) := '';
EXPORT Make_DIS_AMOUNT(SALT28.StrType s0) := s0;
EXPORT InValid_DIS_AMOUNT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_DIS_AMOUNT(UNSIGNED1 wh) := '';
EXPORT Make_DIS_PCT(SALT28.StrType s0) := s0;
EXPORT InValid_DIS_PCT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_DIS_PCT(UNSIGNED1 wh) := '';
EXPORT Make_UNIT_PRICE(SALT28.StrType s0) := s0;
EXPORT InValid_UNIT_PRICE(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_UNIT_PRICE(UNSIGNED1 wh) := '';
EXPORT Make_EXT_PRICE(SALT28.StrType s0) := s0;
EXPORT InValid_EXT_PRICE(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_EXT_PRICE(UNSIGNED1 wh) := '';
EXPORT Make_TAX_RATE(SALT28.StrType s0) := s0;
EXPORT InValid_TAX_RATE(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TAX_RATE(UNSIGNED1 wh) := '';
EXPORT Make_TAX_AMOUNT(SALT28.StrType s0) := s0;
EXPORT InValid_TAX_AMOUNT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TAX_AMOUNT(UNSIGNED1 wh) := '';
EXPORT Make_TICKET_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_TICKET_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TICKET_KEY(UNSIGNED1 wh) := '';
EXPORT Make_TICKET_TYPE(SALT28.StrType s0) := s0;
EXPORT InValid_TICKET_TYPE(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TICKET_TYPE(UNSIGNED1 wh) := '';
EXPORT Make_SUPEV_COMPANY(SALT28.StrType s0) := s0;
EXPORT InValid_SUPEV_COMPANY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_SUPEV_COMPANY(UNSIGNED1 wh) := '';
EXPORT Make_LBR_SUPERVISOR(SALT28.StrType s0) := s0;
EXPORT InValid_LBR_SUPERVISOR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_LBR_SUPERVISOR(UNSIGNED1 wh) := '';
EXPORT Make_CUSTOMER_CONTACT(SALT28.StrType s0) := s0;
EXPORT InValid_CUSTOMER_CONTACT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CUSTOMER_CONTACT(UNSIGNED1 wh) := '';
EXPORT Make_CUSTOMER_PHONE(SALT28.StrType s0) := s0;
EXPORT InValid_CUSTOMER_PHONE(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CUSTOMER_PHONE(UNSIGNED1 wh) := '';
EXPORT Make_BILLED_IND(SALT28.StrType s0) := s0;
EXPORT InValid_BILLED_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BILLED_IND(UNSIGNED1 wh) := '';
EXPORT Make_OPS_RELEASED_IND(SALT28.StrType s0) := s0;
EXPORT InValid_OPS_RELEASED_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_OPS_RELEASED_IND(UNSIGNED1 wh) := '';
EXPORT Make_LOCKED_IND(SALT28.StrType s0) := s0;
EXPORT InValid_LOCKED_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_LOCKED_IND(UNSIGNED1 wh) := '';
EXPORT Make_WIP_IND(SALT28.StrType s0) := s0;
EXPORT InValid_WIP_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_WIP_IND(UNSIGNED1 wh) := '';
EXPORT Make_COMPLETE_IND(SALT28.StrType s0) := s0;
EXPORT InValid_COMPLETE_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_COMPLETE_IND(UNSIGNED1 wh) := '';
EXPORT Make_TARGET_DT(SALT28.StrType s0) := s0;
EXPORT InValid_TARGET_DT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TARGET_DT(UNSIGNED1 wh) := '';
EXPORT Make_EXPECTED_DT(SALT28.StrType s0) := s0;
EXPORT InValid_EXPECTED_DT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_EXPECTED_DT(UNSIGNED1 wh) := '';
EXPORT Make_COMPLETE_DT(SALT28.StrType s0) := s0;
EXPORT InValid_COMPLETE_DT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_COMPLETE_DT(UNSIGNED1 wh) := '';
EXPORT Make_COMMENTS(SALT28.StrType s0) := s0;
EXPORT InValid_COMMENTS(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_COMMENTS(UNSIGNED1 wh) := '';
EXPORT Make_COMMENTS_BILLING(SALT28.StrType s0) := s0;
EXPORT InValid_COMMENTS_BILLING(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_COMMENTS_BILLING(UNSIGNED1 wh) := '';
EXPORT Make_PRINTED_IND(SALT28.StrType s0) := s0;
EXPORT InValid_PRINTED_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PRINTED_IND(UNSIGNED1 wh) := '';
EXPORT Make_GROUP_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_GROUP_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_GROUP_NBR(UNSIGNED1 wh) := '';
EXPORT Make_SUBGROUP_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_SUBGROUP_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_SUBGROUP_NBR(UNSIGNED1 wh) := '';
EXPORT Make_PART_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_PART_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PART_NBR(UNSIGNED1 wh) := '';
EXPORT Make_CUSTOM_DESCR(SALT28.StrType s0) := s0;
EXPORT InValid_CUSTOM_DESCR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CUSTOM_DESCR(UNSIGNED1 wh) := '';
EXPORT Make_PRICE_ITEM_DESCR(SALT28.StrType s0) := s0;
EXPORT InValid_PRICE_ITEM_DESCR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PRICE_ITEM_DESCR(UNSIGNED1 wh) := '';
EXPORT Make_CSUS_EMP_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_CSUS_EMP_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CSUS_EMP_NBR(UNSIGNED1 wh) := '';
EXPORT Make_CSUS_ACTION(SALT28.StrType s0) := s0;
EXPORT InValid_CSUS_ACTION(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CSUS_ACTION(UNSIGNED1 wh) := '';
EXPORT Make_CSUS_TRIGGER_PART(SALT28.StrType s0) := s0;
EXPORT InValid_CSUS_TRIGGER_PART(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CSUS_TRIGGER_PART(UNSIGNED1 wh) := '';
EXPORT Make_PART_WIDTH(SALT28.StrType s0) := s0;
EXPORT InValid_PART_WIDTH(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PART_WIDTH(UNSIGNED1 wh) := '';
EXPORT Make_PART_WIDTH_UOM(SALT28.StrType s0) := s0;
EXPORT InValid_PART_WIDTH_UOM(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PART_WIDTH_UOM(UNSIGNED1 wh) := '';
EXPORT Make_PART_LENGTH(SALT28.StrType s0) := s0;
EXPORT InValid_PART_LENGTH(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PART_LENGTH(UNSIGNED1 wh) := '';
EXPORT Make_PART_LENGTH_UOM(SALT28.StrType s0) := s0;
EXPORT InValid_PART_LENGTH_UOM(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PART_LENGTH_UOM(UNSIGNED1 wh) := '';
EXPORT Make_PART_SQ_FEET(SALT28.StrType s0) := s0;
EXPORT InValid_PART_SQ_FEET(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PART_SQ_FEET(UNSIGNED1 wh) := '';
EXPORT Make_DIM_EDITABLE_IND(SALT28.StrType s0) := s0;
EXPORT InValid_DIM_EDITABLE_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_DIM_EDITABLE_IND(UNSIGNED1 wh) := '';
EXPORT Make_TAX_IND(SALT28.StrType s0) := s0;
EXPORT InValid_TAX_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TAX_IND(UNSIGNED1 wh) := '';
EXPORT Make_TELECOM_IND(SALT28.StrType s0) := s0;
EXPORT InValid_TELECOM_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TELECOM_IND(UNSIGNED1 wh) := '';
EXPORT Make_LA_PARISH_TAX_IND(SALT28.StrType s0) := s0;
EXPORT InValid_LA_PARISH_TAX_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_LA_PARISH_TAX_IND(UNSIGNED1 wh) := '';
EXPORT Make_SELLABLE_IND(SALT28.StrType s0) := s0;
EXPORT InValid_SELLABLE_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_SELLABLE_IND(UNSIGNED1 wh) := '';
EXPORT Make_GST_TAXABLE_IND(SALT28.StrType s0) := s0;
EXPORT InValid_GST_TAXABLE_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_GST_TAXABLE_IND(UNSIGNED1 wh) := '';
EXPORT Make_HST_TAXABLE_IND(SALT28.StrType s0) := s0;
EXPORT InValid_HST_TAXABLE_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_HST_TAXABLE_IND(UNSIGNED1 wh) := '';
EXPORT Make_PST_TAXABLE_IND(SALT28.StrType s0) := s0;
EXPORT InValid_PST_TAXABLE_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PST_TAXABLE_IND(UNSIGNED1 wh) := '';
EXPORT Make_GST_TAX_TAX_IND(SALT28.StrType s0) := s0;
EXPORT InValid_GST_TAX_TAX_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_GST_TAX_TAX_IND(UNSIGNED1 wh) := '';
EXPORT Make_UOM(SALT28.StrType s0) := s0;
EXPORT InValid_UOM(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_UOM(UNSIGNED1 wh) := '';
EXPORT Make_MIN_QTY(SALT28.StrType s0) := s0;
EXPORT InValid_MIN_QTY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_MIN_QTY(UNSIGNED1 wh) := '';
EXPORT Make_CUST_TAX_EXEMPT_IND(SALT28.StrType s0) := s0;
EXPORT InValid_CUST_TAX_EXEMPT_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CUST_TAX_EXEMPT_IND(UNSIGNED1 wh) := '';
EXPORT Make_CUST_GST_EXEMPT_IND(SALT28.StrType s0) := s0;
EXPORT InValid_CUST_GST_EXEMPT_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CUST_GST_EXEMPT_IND(UNSIGNED1 wh) := '';
EXPORT Make_CUST_HST_EXEMPT_IND(SALT28.StrType s0) := s0;
EXPORT InValid_CUST_HST_EXEMPT_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CUST_HST_EXEMPT_IND(UNSIGNED1 wh) := '';
EXPORT Make_CUST_PST_EXEMPT_IND(SALT28.StrType s0) := s0;
EXPORT InValid_CUST_PST_EXEMPT_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CUST_PST_EXEMPT_IND(UNSIGNED1 wh) := '';
EXPORT Make_CUST_GLOBAL_EXEMPT_IND(SALT28.StrType s0) := s0;
EXPORT InValid_CUST_GLOBAL_EXEMPT_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CUST_GLOBAL_EXEMPT_IND(UNSIGNED1 wh) := '';
EXPORT Make_CUSTOMER_TYPE(SALT28.StrType s0) := s0;
EXPORT InValid_CUSTOMER_TYPE(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CUSTOMER_TYPE(UNSIGNED1 wh) := '';
EXPORT Make_BILL_TO_NAME(SALT28.StrType s0) := s0;
EXPORT InValid_BILL_TO_NAME(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BILL_TO_NAME(UNSIGNED1 wh) := '';
EXPORT Make_BILL_TO_CREDIT_STATUS(SALT28.StrType s0) := s0;
EXPORT InValid_BILL_TO_CREDIT_STATUS(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BILL_TO_CREDIT_STATUS(UNSIGNED1 wh) := '';
EXPORT Make_EMS_ORDER_IND(SALT28.StrType s0) := s0;
EXPORT InValid_EMS_ORDER_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_EMS_ORDER_IND(UNSIGNED1 wh) := '';
EXPORT Make_USER_ID(SALT28.StrType s0) := s0;
EXPORT InValid_USER_ID(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_USER_ID(UNSIGNED1 wh) := '';
EXPORT Make_LAST_UPDATE_DT(SALT28.StrType s0) := s0;
EXPORT InValid_LAST_UPDATE_DT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_LAST_UPDATE_DT(UNSIGNED1 wh) := '';
EXPORT Make_FET_SHIPMENT_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_FET_SHIPMENT_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_FET_SHIPMENT_NBR(UNSIGNED1 wh) := '';
EXPORT Make_MHA_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_MHA_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_MHA_KEY(UNSIGNED1 wh) := '';
EXPORT Make_MANUAL_MHA_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_MANUAL_MHA_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_MANUAL_MHA_NBR(UNSIGNED1 wh) := '';
EXPORT Make_DESTINATION(SALT28.StrType s0) := s0;
EXPORT InValid_DESTINATION(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_DESTINATION(UNSIGNED1 wh) := '';
EXPORT Make_PIECES(SALT28.StrType s0) := s0;
EXPORT InValid_PIECES(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PIECES(UNSIGNED1 wh) := '';
EXPORT Make_WEIGHT(SALT28.StrType s0) := s0;
EXPORT InValid_WEIGHT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_WEIGHT(UNSIGNED1 wh) := '';
EXPORT Make_RECEIVER_IND(SALT28.StrType s0) := s0;
EXPORT InValid_RECEIVER_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_RECEIVER_IND(UNSIGNED1 wh) := '';
EXPORT Make_ACCOUNTING_CODE(SALT28.StrType s0) := s0;
EXPORT InValid_ACCOUNTING_CODE(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ACCOUNTING_CODE(UNSIGNED1 wh) := '';
EXPORT Make_SHOW_SITE_ORDER(SALT28.StrType s0) := s0;
EXPORT InValid_SHOW_SITE_ORDER(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_SHOW_SITE_ORDER(UNSIGNED1 wh) := '';
EXPORT Make_SHOW_SITE_REVISION(SALT28.StrType s0) := s0;
EXPORT InValid_SHOW_SITE_REVISION(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_SHOW_SITE_REVISION(UNSIGNED1 wh) := '';
EXPORT Make_ORDERWIP(SALT28.StrType s0) := s0;
EXPORT InValid_ORDERWIP(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ORDERWIP(UNSIGNED1 wh) := '';
EXPORT Make_FOL_ORDER_IND(SALT28.StrType s0) := s0;
EXPORT InValid_FOL_ORDER_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_FOL_ORDER_IND(UNSIGNED1 wh) := '';
EXPORT Make_ESS_ORDER_IND(SALT28.StrType s0) := s0;
EXPORT InValid_ESS_ORDER_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ESS_ORDER_IND(UNSIGNED1 wh) := '';
// This macro will compute and count field level differences based upon a pivot expression
export MAC_CountDifferencesByPivot(in_left,in_right,pivot_exp,bad_pivots,out_counts) := MACRO
  IMPORT SALT28,Exhibition_orderitemdata;
//Find those highly occuring pivot values to remove them from consideration
#uniquename(tr)
  %tr% := table(in_left+in_right,{ val := pivot_exp; });
#uniquename(r1)
  %r1% := record
    %tr%.val;    unsigned Cnt := COUNT(GROUP);
  end;
#uniquename(t1)
  %t1% := table(%tr%,%r1%,val,local); // Pre-aggregate before distribute
#uniquename(r2)
  %r2% := record
    %t1%.val;    unsigned Cnt := SUM(GROUP,%t1%.Cnt);
  end;
#uniquename(t2)
  %t2% := table(%t1%,%r2%,val); // Now do global aggregate
Bad_Pivots := %t2%(Cnt>100);
#uniquename(dl)
  %dl% := RECORD
    BOOLEAN Diff_SHOW_KEY;
    BOOLEAN Diff_ORDER_KEY;
    BOOLEAN Diff_FOL_ORDER_KEY;
    BOOLEAN Diff_CREATION_DT;
    BOOLEAN Diff_ORDER_CREATOR_ID;
    BOOLEAN Diff_ITEM_CREATE_DT;
    BOOLEAN Diff_ITEM_CREATOR_ID;
    BOOLEAN Diff_KEYVAL;
    BOOLEAN Diff_ORDER_ITEM_NBR;
    BOOLEAN Diff_EXHIBITOR_KEY;
    BOOLEAN Diff_BILL_TO_KEY;
    BOOLEAN Diff_BOOTH_KEY;
    BOOLEAN Diff_BOOTH_ID;
    BOOLEAN Diff_BOOTH_SORT;
    BOOLEAN Diff_PRG_ACCT_BOOTH_IND;
    BOOLEAN Diff_PRG_ACCT_CUST_IND;
    BOOLEAN Diff_FACILITY_KEY;
    BOOLEAN Diff_LOCATION_KEY;
    BOOLEAN Diff_AREA_KEY;
    BOOLEAN Diff_VOID_ORDER_IND;
    BOOLEAN Diff_ORDER_DESCR;
    BOOLEAN Diff_ORDER_COMMENT;
    BOOLEAN Diff_CC_KEY;
    BOOLEAN Diff_CC_TYPE;
    BOOLEAN Diff_CC_LAST_FOUR_DIGITS;
    BOOLEAN Diff_PARENT_INV_PART_NBR;
    BOOLEAN Diff_PARENT_BOM_KEY;
    BOOLEAN Diff_INV_PART_NBR;
    BOOLEAN Diff_BOM_NBR;
    BOOLEAN Diff_INVOICE_KEY;
    BOOLEAN Diff_REV_LEVEL;
    BOOLEAN Diff_TRANSACTION_KEY;
    BOOLEAN Diff_QTY_MEN;
    BOOLEAN Diff_TOTAL_TIME;
    BOOLEAN Diff_QUANTITY;
    BOOLEAN Diff_STD_PRICE;
    BOOLEAN Diff_DIS_AMOUNT;
    BOOLEAN Diff_DIS_PCT;
    BOOLEAN Diff_UNIT_PRICE;
    BOOLEAN Diff_EXT_PRICE;
    BOOLEAN Diff_TAX_RATE;
    BOOLEAN Diff_TAX_AMOUNT;
    BOOLEAN Diff_TICKET_KEY;
    BOOLEAN Diff_TICKET_TYPE;
    BOOLEAN Diff_SUPEV_COMPANY;
    BOOLEAN Diff_LBR_SUPERVISOR;
    BOOLEAN Diff_CUSTOMER_CONTACT;
    BOOLEAN Diff_CUSTOMER_PHONE;
    BOOLEAN Diff_BILLED_IND;
    BOOLEAN Diff_OPS_RELEASED_IND;
    BOOLEAN Diff_LOCKED_IND;
    BOOLEAN Diff_WIP_IND;
    BOOLEAN Diff_COMPLETE_IND;
    BOOLEAN Diff_TARGET_DT;
    BOOLEAN Diff_EXPECTED_DT;
    BOOLEAN Diff_COMPLETE_DT;
    BOOLEAN Diff_COMMENTS;
    BOOLEAN Diff_COMMENTS_BILLING;
    BOOLEAN Diff_PRINTED_IND;
    BOOLEAN Diff_GROUP_NBR;
    BOOLEAN Diff_SUBGROUP_NBR;
    BOOLEAN Diff_PART_NBR;
    BOOLEAN Diff_CUSTOM_DESCR;
    BOOLEAN Diff_PRICE_ITEM_DESCR;
    BOOLEAN Diff_CSUS_EMP_NBR;
    BOOLEAN Diff_CSUS_ACTION;
    BOOLEAN Diff_CSUS_TRIGGER_PART;
    BOOLEAN Diff_PART_WIDTH;
    BOOLEAN Diff_PART_WIDTH_UOM;
    BOOLEAN Diff_PART_LENGTH;
    BOOLEAN Diff_PART_LENGTH_UOM;
    BOOLEAN Diff_PART_SQ_FEET;
    BOOLEAN Diff_DIM_EDITABLE_IND;
    BOOLEAN Diff_TAX_IND;
    BOOLEAN Diff_TELECOM_IND;
    BOOLEAN Diff_LA_PARISH_TAX_IND;
    BOOLEAN Diff_SELLABLE_IND;
    BOOLEAN Diff_GST_TAXABLE_IND;
    BOOLEAN Diff_HST_TAXABLE_IND;
    BOOLEAN Diff_PST_TAXABLE_IND;
    BOOLEAN Diff_GST_TAX_TAX_IND;
    BOOLEAN Diff_UOM;
    BOOLEAN Diff_MIN_QTY;
    BOOLEAN Diff_CUST_TAX_EXEMPT_IND;
    BOOLEAN Diff_CUST_GST_EXEMPT_IND;
    BOOLEAN Diff_CUST_HST_EXEMPT_IND;
    BOOLEAN Diff_CUST_PST_EXEMPT_IND;
    BOOLEAN Diff_CUST_GLOBAL_EXEMPT_IND;
    BOOLEAN Diff_CUSTOMER_TYPE;
    BOOLEAN Diff_BILL_TO_NAME;
    BOOLEAN Diff_BILL_TO_CREDIT_STATUS;
    BOOLEAN Diff_EMS_ORDER_IND;
    BOOLEAN Diff_USER_ID;
    BOOLEAN Diff_LAST_UPDATE_DT;
    BOOLEAN Diff_FET_SHIPMENT_NBR;
    BOOLEAN Diff_MHA_KEY;
    BOOLEAN Diff_MANUAL_MHA_NBR;
    BOOLEAN Diff_DESTINATION;
    BOOLEAN Diff_PIECES;
    BOOLEAN Diff_WEIGHT;
    BOOLEAN Diff_RECEIVER_IND;
    BOOLEAN Diff_ACCOUNTING_CODE;
    BOOLEAN Diff_SHOW_SITE_ORDER;
    BOOLEAN Diff_SHOW_SITE_REVISION;
    BOOLEAN Diff_ORDERWIP;
    BOOLEAN Diff_FOL_ORDER_IND;
    BOOLEAN Diff_ESS_ORDER_IND;
    UNSIGNED Num_Diffs;
    SALT28.StrType Val {MAXLENGTH(1024)};
  END;
#uniquename(fd)
  %dl% %fd%(in_left le,in_right ri) := TRANSFORM
    SELF.Diff_SHOW_KEY := le.SHOW_KEY <> ri.SHOW_KEY;
    SELF.Diff_ORDER_KEY := le.ORDER_KEY <> ri.ORDER_KEY;
    SELF.Diff_FOL_ORDER_KEY := le.FOL_ORDER_KEY <> ri.FOL_ORDER_KEY;
    SELF.Diff_CREATION_DT := le.CREATION_DT <> ri.CREATION_DT;
    SELF.Diff_ORDER_CREATOR_ID := le.ORDER_CREATOR_ID <> ri.ORDER_CREATOR_ID;
    SELF.Diff_ITEM_CREATE_DT := le.ITEM_CREATE_DT <> ri.ITEM_CREATE_DT;
    SELF.Diff_ITEM_CREATOR_ID := le.ITEM_CREATOR_ID <> ri.ITEM_CREATOR_ID;
    SELF.Diff_KEYVAL := le.KEYVAL <> ri.KEYVAL;
    SELF.Diff_ORDER_ITEM_NBR := le.ORDER_ITEM_NBR <> ri.ORDER_ITEM_NBR;
    SELF.Diff_EXHIBITOR_KEY := le.EXHIBITOR_KEY <> ri.EXHIBITOR_KEY;
    SELF.Diff_BILL_TO_KEY := le.BILL_TO_KEY <> ri.BILL_TO_KEY;
    SELF.Diff_BOOTH_KEY := le.BOOTH_KEY <> ri.BOOTH_KEY;
    SELF.Diff_BOOTH_ID := le.BOOTH_ID <> ri.BOOTH_ID;
    SELF.Diff_BOOTH_SORT := le.BOOTH_SORT <> ri.BOOTH_SORT;
    SELF.Diff_PRG_ACCT_BOOTH_IND := le.PRG_ACCT_BOOTH_IND <> ri.PRG_ACCT_BOOTH_IND;
    SELF.Diff_PRG_ACCT_CUST_IND := le.PRG_ACCT_CUST_IND <> ri.PRG_ACCT_CUST_IND;
    SELF.Diff_FACILITY_KEY := le.FACILITY_KEY <> ri.FACILITY_KEY;
    SELF.Diff_LOCATION_KEY := le.LOCATION_KEY <> ri.LOCATION_KEY;
    SELF.Diff_AREA_KEY := le.AREA_KEY <> ri.AREA_KEY;
    SELF.Diff_VOID_ORDER_IND := le.VOID_ORDER_IND <> ri.VOID_ORDER_IND;
    SELF.Diff_ORDER_DESCR := le.ORDER_DESCR <> ri.ORDER_DESCR;
    SELF.Diff_ORDER_COMMENT := le.ORDER_COMMENT <> ri.ORDER_COMMENT;
    SELF.Diff_CC_KEY := le.CC_KEY <> ri.CC_KEY;
    SELF.Diff_CC_TYPE := le.CC_TYPE <> ri.CC_TYPE;
    SELF.Diff_CC_LAST_FOUR_DIGITS := le.CC_LAST_FOUR_DIGITS <> ri.CC_LAST_FOUR_DIGITS;
    SELF.Diff_PARENT_INV_PART_NBR := le.PARENT_INV_PART_NBR <> ri.PARENT_INV_PART_NBR;
    SELF.Diff_PARENT_BOM_KEY := le.PARENT_BOM_KEY <> ri.PARENT_BOM_KEY;
    SELF.Diff_INV_PART_NBR := le.INV_PART_NBR <> ri.INV_PART_NBR;
    SELF.Diff_BOM_NBR := le.BOM_NBR <> ri.BOM_NBR;
    SELF.Diff_INVOICE_KEY := le.INVOICE_KEY <> ri.INVOICE_KEY;
    SELF.Diff_REV_LEVEL := le.REV_LEVEL <> ri.REV_LEVEL;
    SELF.Diff_TRANSACTION_KEY := le.TRANSACTION_KEY <> ri.TRANSACTION_KEY;
    SELF.Diff_QTY_MEN := le.QTY_MEN <> ri.QTY_MEN;
    SELF.Diff_TOTAL_TIME := le.TOTAL_TIME <> ri.TOTAL_TIME;
    SELF.Diff_QUANTITY := le.QUANTITY <> ri.QUANTITY;
    SELF.Diff_STD_PRICE := le.STD_PRICE <> ri.STD_PRICE;
    SELF.Diff_DIS_AMOUNT := le.DIS_AMOUNT <> ri.DIS_AMOUNT;
    SELF.Diff_DIS_PCT := le.DIS_PCT <> ri.DIS_PCT;
    SELF.Diff_UNIT_PRICE := le.UNIT_PRICE <> ri.UNIT_PRICE;
    SELF.Diff_EXT_PRICE := le.EXT_PRICE <> ri.EXT_PRICE;
    SELF.Diff_TAX_RATE := le.TAX_RATE <> ri.TAX_RATE;
    SELF.Diff_TAX_AMOUNT := le.TAX_AMOUNT <> ri.TAX_AMOUNT;
    SELF.Diff_TICKET_KEY := le.TICKET_KEY <> ri.TICKET_KEY;
    SELF.Diff_TICKET_TYPE := le.TICKET_TYPE <> ri.TICKET_TYPE;
    SELF.Diff_SUPEV_COMPANY := le.SUPEV_COMPANY <> ri.SUPEV_COMPANY;
    SELF.Diff_LBR_SUPERVISOR := le.LBR_SUPERVISOR <> ri.LBR_SUPERVISOR;
    SELF.Diff_CUSTOMER_CONTACT := le.CUSTOMER_CONTACT <> ri.CUSTOMER_CONTACT;
    SELF.Diff_CUSTOMER_PHONE := le.CUSTOMER_PHONE <> ri.CUSTOMER_PHONE;
    SELF.Diff_BILLED_IND := le.BILLED_IND <> ri.BILLED_IND;
    SELF.Diff_OPS_RELEASED_IND := le.OPS_RELEASED_IND <> ri.OPS_RELEASED_IND;
    SELF.Diff_LOCKED_IND := le.LOCKED_IND <> ri.LOCKED_IND;
    SELF.Diff_WIP_IND := le.WIP_IND <> ri.WIP_IND;
    SELF.Diff_COMPLETE_IND := le.COMPLETE_IND <> ri.COMPLETE_IND;
    SELF.Diff_TARGET_DT := le.TARGET_DT <> ri.TARGET_DT;
    SELF.Diff_EXPECTED_DT := le.EXPECTED_DT <> ri.EXPECTED_DT;
    SELF.Diff_COMPLETE_DT := le.COMPLETE_DT <> ri.COMPLETE_DT;
    SELF.Diff_COMMENTS := le.COMMENTS <> ri.COMMENTS;
    SELF.Diff_COMMENTS_BILLING := le.COMMENTS_BILLING <> ri.COMMENTS_BILLING;
    SELF.Diff_PRINTED_IND := le.PRINTED_IND <> ri.PRINTED_IND;
    SELF.Diff_GROUP_NBR := le.GROUP_NBR <> ri.GROUP_NBR;
    SELF.Diff_SUBGROUP_NBR := le.SUBGROUP_NBR <> ri.SUBGROUP_NBR;
    SELF.Diff_PART_NBR := le.PART_NBR <> ri.PART_NBR;
    SELF.Diff_CUSTOM_DESCR := le.CUSTOM_DESCR <> ri.CUSTOM_DESCR;
    SELF.Diff_PRICE_ITEM_DESCR := le.PRICE_ITEM_DESCR <> ri.PRICE_ITEM_DESCR;
    SELF.Diff_CSUS_EMP_NBR := le.CSUS_EMP_NBR <> ri.CSUS_EMP_NBR;
    SELF.Diff_CSUS_ACTION := le.CSUS_ACTION <> ri.CSUS_ACTION;
    SELF.Diff_CSUS_TRIGGER_PART := le.CSUS_TRIGGER_PART <> ri.CSUS_TRIGGER_PART;
    SELF.Diff_PART_WIDTH := le.PART_WIDTH <> ri.PART_WIDTH;
    SELF.Diff_PART_WIDTH_UOM := le.PART_WIDTH_UOM <> ri.PART_WIDTH_UOM;
    SELF.Diff_PART_LENGTH := le.PART_LENGTH <> ri.PART_LENGTH;
    SELF.Diff_PART_LENGTH_UOM := le.PART_LENGTH_UOM <> ri.PART_LENGTH_UOM;
    SELF.Diff_PART_SQ_FEET := le.PART_SQ_FEET <> ri.PART_SQ_FEET;
    SELF.Diff_DIM_EDITABLE_IND := le.DIM_EDITABLE_IND <> ri.DIM_EDITABLE_IND;
    SELF.Diff_TAX_IND := le.TAX_IND <> ri.TAX_IND;
    SELF.Diff_TELECOM_IND := le.TELECOM_IND <> ri.TELECOM_IND;
    SELF.Diff_LA_PARISH_TAX_IND := le.LA_PARISH_TAX_IND <> ri.LA_PARISH_TAX_IND;
    SELF.Diff_SELLABLE_IND := le.SELLABLE_IND <> ri.SELLABLE_IND;
    SELF.Diff_GST_TAXABLE_IND := le.GST_TAXABLE_IND <> ri.GST_TAXABLE_IND;
    SELF.Diff_HST_TAXABLE_IND := le.HST_TAXABLE_IND <> ri.HST_TAXABLE_IND;
    SELF.Diff_PST_TAXABLE_IND := le.PST_TAXABLE_IND <> ri.PST_TAXABLE_IND;
    SELF.Diff_GST_TAX_TAX_IND := le.GST_TAX_TAX_IND <> ri.GST_TAX_TAX_IND;
    SELF.Diff_UOM := le.UOM <> ri.UOM;
    SELF.Diff_MIN_QTY := le.MIN_QTY <> ri.MIN_QTY;
    SELF.Diff_CUST_TAX_EXEMPT_IND := le.CUST_TAX_EXEMPT_IND <> ri.CUST_TAX_EXEMPT_IND;
    SELF.Diff_CUST_GST_EXEMPT_IND := le.CUST_GST_EXEMPT_IND <> ri.CUST_GST_EXEMPT_IND;
    SELF.Diff_CUST_HST_EXEMPT_IND := le.CUST_HST_EXEMPT_IND <> ri.CUST_HST_EXEMPT_IND;
    SELF.Diff_CUST_PST_EXEMPT_IND := le.CUST_PST_EXEMPT_IND <> ri.CUST_PST_EXEMPT_IND;
    SELF.Diff_CUST_GLOBAL_EXEMPT_IND := le.CUST_GLOBAL_EXEMPT_IND <> ri.CUST_GLOBAL_EXEMPT_IND;
    SELF.Diff_CUSTOMER_TYPE := le.CUSTOMER_TYPE <> ri.CUSTOMER_TYPE;
    SELF.Diff_BILL_TO_NAME := le.BILL_TO_NAME <> ri.BILL_TO_NAME;
    SELF.Diff_BILL_TO_CREDIT_STATUS := le.BILL_TO_CREDIT_STATUS <> ri.BILL_TO_CREDIT_STATUS;
    SELF.Diff_EMS_ORDER_IND := le.EMS_ORDER_IND <> ri.EMS_ORDER_IND;
    SELF.Diff_USER_ID := le.USER_ID <> ri.USER_ID;
    SELF.Diff_LAST_UPDATE_DT := le.LAST_UPDATE_DT <> ri.LAST_UPDATE_DT;
    SELF.Diff_FET_SHIPMENT_NBR := le.FET_SHIPMENT_NBR <> ri.FET_SHIPMENT_NBR;
    SELF.Diff_MHA_KEY := le.MHA_KEY <> ri.MHA_KEY;
    SELF.Diff_MANUAL_MHA_NBR := le.MANUAL_MHA_NBR <> ri.MANUAL_MHA_NBR;
    SELF.Diff_DESTINATION := le.DESTINATION <> ri.DESTINATION;
    SELF.Diff_PIECES := le.PIECES <> ri.PIECES;
    SELF.Diff_WEIGHT := le.WEIGHT <> ri.WEIGHT;
    SELF.Diff_RECEIVER_IND := le.RECEIVER_IND <> ri.RECEIVER_IND;
    SELF.Diff_ACCOUNTING_CODE := le.ACCOUNTING_CODE <> ri.ACCOUNTING_CODE;
    SELF.Diff_SHOW_SITE_ORDER := le.SHOW_SITE_ORDER <> ri.SHOW_SITE_ORDER;
    SELF.Diff_SHOW_SITE_REVISION := le.SHOW_SITE_REVISION <> ri.SHOW_SITE_REVISION;
    SELF.Diff_ORDERWIP := le.ORDERWIP <> ri.ORDERWIP;
    SELF.Diff_FOL_ORDER_IND := le.FOL_ORDER_IND <> ri.FOL_ORDER_IND;
    SELF.Diff_ESS_ORDER_IND := le.ESS_ORDER_IND <> ri.ESS_ORDER_IND;
    SELF.Val := (SALT28.StrType)evaluate(le,pivot_exp);
    SELF.Num_Diffs := 0+ IF( SELF.Diff_SHOW_KEY,1,0)+ IF( SELF.Diff_ORDER_KEY,1,0)+ IF( SELF.Diff_FOL_ORDER_KEY,1,0)+ IF( SELF.Diff_CREATION_DT,1,0)+ IF( SELF.Diff_ORDER_CREATOR_ID,1,0)+ IF( SELF.Diff_ITEM_CREATE_DT,1,0)+ IF( SELF.Diff_ITEM_CREATOR_ID,1,0)+ IF( SELF.Diff_KEYVAL,1,0)+ IF( SELF.Diff_ORDER_ITEM_NBR,1,0)+ IF( SELF.Diff_EXHIBITOR_KEY,1,0)+ IF( SELF.Diff_BILL_TO_KEY,1,0)+ IF( SELF.Diff_BOOTH_KEY,1,0)+ IF( SELF.Diff_BOOTH_ID,1,0)+ IF( SELF.Diff_BOOTH_SORT,1,0)+ IF( SELF.Diff_PRG_ACCT_BOOTH_IND,1,0)+ IF( SELF.Diff_PRG_ACCT_CUST_IND,1,0)+ IF( SELF.Diff_FACILITY_KEY,1,0)+ IF( SELF.Diff_LOCATION_KEY,1,0)+ IF( SELF.Diff_AREA_KEY,1,0)+ IF( SELF.Diff_VOID_ORDER_IND,1,0)+ IF( SELF.Diff_ORDER_DESCR,1,0)+ IF( SELF.Diff_ORDER_COMMENT,1,0)+ IF( SELF.Diff_CC_KEY,1,0)+ IF( SELF.Diff_CC_TYPE,1,0)+ IF( SELF.Diff_CC_LAST_FOUR_DIGITS,1,0)+ IF( SELF.Diff_PARENT_INV_PART_NBR,1,0)+ IF( SELF.Diff_PARENT_BOM_KEY,1,0)+ IF( SELF.Diff_INV_PART_NBR,1,0)+ IF( SELF.Diff_BOM_NBR,1,0)+ IF( SELF.Diff_INVOICE_KEY,1,0)+ IF( SELF.Diff_REV_LEVEL,1,0)+ IF( SELF.Diff_TRANSACTION_KEY,1,0)+ IF( SELF.Diff_QTY_MEN,1,0)+ IF( SELF.Diff_TOTAL_TIME,1,0)+ IF( SELF.Diff_QUANTITY,1,0)+ IF( SELF.Diff_STD_PRICE,1,0)+ IF( SELF.Diff_DIS_AMOUNT,1,0)+ IF( SELF.Diff_DIS_PCT,1,0)+ IF( SELF.Diff_UNIT_PRICE,1,0)+ IF( SELF.Diff_EXT_PRICE,1,0)+ IF( SELF.Diff_TAX_RATE,1,0)+ IF( SELF.Diff_TAX_AMOUNT,1,0)+ IF( SELF.Diff_TICKET_KEY,1,0)+ IF( SELF.Diff_TICKET_TYPE,1,0)+ IF( SELF.Diff_SUPEV_COMPANY,1,0)+ IF( SELF.Diff_LBR_SUPERVISOR,1,0)+ IF( SELF.Diff_CUSTOMER_CONTACT,1,0)+ IF( SELF.Diff_CUSTOMER_PHONE,1,0)+ IF( SELF.Diff_BILLED_IND,1,0)+ IF( SELF.Diff_OPS_RELEASED_IND,1,0)+ IF( SELF.Diff_LOCKED_IND,1,0)+ IF( SELF.Diff_WIP_IND,1,0)+ IF( SELF.Diff_COMPLETE_IND,1,0)+ IF( SELF.Diff_TARGET_DT,1,0)+ IF( SELF.Diff_EXPECTED_DT,1,0)+ IF( SELF.Diff_COMPLETE_DT,1,0)+ IF( SELF.Diff_COMMENTS,1,0)+ IF( SELF.Diff_COMMENTS_BILLING,1,0)+ IF( SELF.Diff_PRINTED_IND,1,0)+ IF( SELF.Diff_GROUP_NBR,1,0)+ IF( SELF.Diff_SUBGROUP_NBR,1,0)+ IF( SELF.Diff_PART_NBR,1,0)+ IF( SELF.Diff_CUSTOM_DESCR,1,0)+ IF( SELF.Diff_PRICE_ITEM_DESCR,1,0)+ IF( SELF.Diff_CSUS_EMP_NBR,1,0)+ IF( SELF.Diff_CSUS_ACTION,1,0)+ IF( SELF.Diff_CSUS_TRIGGER_PART,1,0)+ IF( SELF.Diff_PART_WIDTH,1,0)+ IF( SELF.Diff_PART_WIDTH_UOM,1,0)+ IF( SELF.Diff_PART_LENGTH,1,0)+ IF( SELF.Diff_PART_LENGTH_UOM,1,0)+ IF( SELF.Diff_PART_SQ_FEET,1,0)+ IF( SELF.Diff_DIM_EDITABLE_IND,1,0)+ IF( SELF.Diff_TAX_IND,1,0)+ IF( SELF.Diff_TELECOM_IND,1,0)+ IF( SELF.Diff_LA_PARISH_TAX_IND,1,0)+ IF( SELF.Diff_SELLABLE_IND,1,0)+ IF( SELF.Diff_GST_TAXABLE_IND,1,0)+ IF( SELF.Diff_HST_TAXABLE_IND,1,0)+ IF( SELF.Diff_PST_TAXABLE_IND,1,0)+ IF( SELF.Diff_GST_TAX_TAX_IND,1,0)+ IF( SELF.Diff_UOM,1,0)+ IF( SELF.Diff_MIN_QTY,1,0)+ IF( SELF.Diff_CUST_TAX_EXEMPT_IND,1,0)+ IF( SELF.Diff_CUST_GST_EXEMPT_IND,1,0)+ IF( SELF.Diff_CUST_HST_EXEMPT_IND,1,0)+ IF( SELF.Diff_CUST_PST_EXEMPT_IND,1,0)+ IF( SELF.Diff_CUST_GLOBAL_EXEMPT_IND,1,0)+ IF( SELF.Diff_CUSTOMER_TYPE,1,0)+ IF( SELF.Diff_BILL_TO_NAME,1,0)+ IF( SELF.Diff_BILL_TO_CREDIT_STATUS,1,0)+ IF( SELF.Diff_EMS_ORDER_IND,1,0)+ IF( SELF.Diff_USER_ID,1,0)+ IF( SELF.Diff_LAST_UPDATE_DT,1,0)+ IF( SELF.Diff_FET_SHIPMENT_NBR,1,0)+ IF( SELF.Diff_MHA_KEY,1,0)+ IF( SELF.Diff_MANUAL_MHA_NBR,1,0)+ IF( SELF.Diff_DESTINATION,1,0)+ IF( SELF.Diff_PIECES,1,0)+ IF( SELF.Diff_WEIGHT,1,0)+ IF( SELF.Diff_RECEIVER_IND,1,0)+ IF( SELF.Diff_ACCOUNTING_CODE,1,0)+ IF( SELF.Diff_SHOW_SITE_ORDER,1,0)+ IF( SELF.Diff_SHOW_SITE_REVISION,1,0)+ IF( SELF.Diff_ORDERWIP,1,0)+ IF( SELF.Diff_FOL_ORDER_IND,1,0)+ IF( SELF.Diff_ESS_ORDER_IND,1,0);
  END;
// Now need to remove bad pivots from comparison
#uniquename(L)
  %L% := JOIN(in_left,bad_pivots,evaluate(LEFT,pivot_exp)=right.val,transform(left),left only,lookup);
#uniquename(R)
  %R% := JOIN(in_right,bad_pivots,evaluate(LEFT,pivot_exp)=right.val,transform(left),left only,lookup);
#uniquename(DiffL)
  %DiffL% := JOIN(%L%,%R%,evaluate(left,pivot_exp)=evaluate(right,pivot_exp),%fd%(left,right),hash);
#uniquename(Closest)
  %Closest% := DEDUP(SORT(%DiffL%,Val,Num_Diffs,local),Val,local); // Join will have distributed by pivot_exp
#uniquename(AggRec)
  %AggRec% := RECORD
    Count_Diff_SHOW_KEY := COUNT(GROUP,%Closest%.Diff_SHOW_KEY);
    Count_Diff_ORDER_KEY := COUNT(GROUP,%Closest%.Diff_ORDER_KEY);
    Count_Diff_FOL_ORDER_KEY := COUNT(GROUP,%Closest%.Diff_FOL_ORDER_KEY);
    Count_Diff_CREATION_DT := COUNT(GROUP,%Closest%.Diff_CREATION_DT);
    Count_Diff_ORDER_CREATOR_ID := COUNT(GROUP,%Closest%.Diff_ORDER_CREATOR_ID);
    Count_Diff_ITEM_CREATE_DT := COUNT(GROUP,%Closest%.Diff_ITEM_CREATE_DT);
    Count_Diff_ITEM_CREATOR_ID := COUNT(GROUP,%Closest%.Diff_ITEM_CREATOR_ID);
    Count_Diff_KEYVAL := COUNT(GROUP,%Closest%.Diff_KEYVAL);
    Count_Diff_ORDER_ITEM_NBR := COUNT(GROUP,%Closest%.Diff_ORDER_ITEM_NBR);
    Count_Diff_EXHIBITOR_KEY := COUNT(GROUP,%Closest%.Diff_EXHIBITOR_KEY);
    Count_Diff_BILL_TO_KEY := COUNT(GROUP,%Closest%.Diff_BILL_TO_KEY);
    Count_Diff_BOOTH_KEY := COUNT(GROUP,%Closest%.Diff_BOOTH_KEY);
    Count_Diff_BOOTH_ID := COUNT(GROUP,%Closest%.Diff_BOOTH_ID);
    Count_Diff_BOOTH_SORT := COUNT(GROUP,%Closest%.Diff_BOOTH_SORT);
    Count_Diff_PRG_ACCT_BOOTH_IND := COUNT(GROUP,%Closest%.Diff_PRG_ACCT_BOOTH_IND);
    Count_Diff_PRG_ACCT_CUST_IND := COUNT(GROUP,%Closest%.Diff_PRG_ACCT_CUST_IND);
    Count_Diff_FACILITY_KEY := COUNT(GROUP,%Closest%.Diff_FACILITY_KEY);
    Count_Diff_LOCATION_KEY := COUNT(GROUP,%Closest%.Diff_LOCATION_KEY);
    Count_Diff_AREA_KEY := COUNT(GROUP,%Closest%.Diff_AREA_KEY);
    Count_Diff_VOID_ORDER_IND := COUNT(GROUP,%Closest%.Diff_VOID_ORDER_IND);
    Count_Diff_ORDER_DESCR := COUNT(GROUP,%Closest%.Diff_ORDER_DESCR);
    Count_Diff_ORDER_COMMENT := COUNT(GROUP,%Closest%.Diff_ORDER_COMMENT);
    Count_Diff_CC_KEY := COUNT(GROUP,%Closest%.Diff_CC_KEY);
    Count_Diff_CC_TYPE := COUNT(GROUP,%Closest%.Diff_CC_TYPE);
    Count_Diff_CC_LAST_FOUR_DIGITS := COUNT(GROUP,%Closest%.Diff_CC_LAST_FOUR_DIGITS);
    Count_Diff_PARENT_INV_PART_NBR := COUNT(GROUP,%Closest%.Diff_PARENT_INV_PART_NBR);
    Count_Diff_PARENT_BOM_KEY := COUNT(GROUP,%Closest%.Diff_PARENT_BOM_KEY);
    Count_Diff_INV_PART_NBR := COUNT(GROUP,%Closest%.Diff_INV_PART_NBR);
    Count_Diff_BOM_NBR := COUNT(GROUP,%Closest%.Diff_BOM_NBR);
    Count_Diff_INVOICE_KEY := COUNT(GROUP,%Closest%.Diff_INVOICE_KEY);
    Count_Diff_REV_LEVEL := COUNT(GROUP,%Closest%.Diff_REV_LEVEL);
    Count_Diff_TRANSACTION_KEY := COUNT(GROUP,%Closest%.Diff_TRANSACTION_KEY);
    Count_Diff_QTY_MEN := COUNT(GROUP,%Closest%.Diff_QTY_MEN);
    Count_Diff_TOTAL_TIME := COUNT(GROUP,%Closest%.Diff_TOTAL_TIME);
    Count_Diff_QUANTITY := COUNT(GROUP,%Closest%.Diff_QUANTITY);
    Count_Diff_STD_PRICE := COUNT(GROUP,%Closest%.Diff_STD_PRICE);
    Count_Diff_DIS_AMOUNT := COUNT(GROUP,%Closest%.Diff_DIS_AMOUNT);
    Count_Diff_DIS_PCT := COUNT(GROUP,%Closest%.Diff_DIS_PCT);
    Count_Diff_UNIT_PRICE := COUNT(GROUP,%Closest%.Diff_UNIT_PRICE);
    Count_Diff_EXT_PRICE := COUNT(GROUP,%Closest%.Diff_EXT_PRICE);
    Count_Diff_TAX_RATE := COUNT(GROUP,%Closest%.Diff_TAX_RATE);
    Count_Diff_TAX_AMOUNT := COUNT(GROUP,%Closest%.Diff_TAX_AMOUNT);
    Count_Diff_TICKET_KEY := COUNT(GROUP,%Closest%.Diff_TICKET_KEY);
    Count_Diff_TICKET_TYPE := COUNT(GROUP,%Closest%.Diff_TICKET_TYPE);
    Count_Diff_SUPEV_COMPANY := COUNT(GROUP,%Closest%.Diff_SUPEV_COMPANY);
    Count_Diff_LBR_SUPERVISOR := COUNT(GROUP,%Closest%.Diff_LBR_SUPERVISOR);
    Count_Diff_CUSTOMER_CONTACT := COUNT(GROUP,%Closest%.Diff_CUSTOMER_CONTACT);
    Count_Diff_CUSTOMER_PHONE := COUNT(GROUP,%Closest%.Diff_CUSTOMER_PHONE);
    Count_Diff_BILLED_IND := COUNT(GROUP,%Closest%.Diff_BILLED_IND);
    Count_Diff_OPS_RELEASED_IND := COUNT(GROUP,%Closest%.Diff_OPS_RELEASED_IND);
    Count_Diff_LOCKED_IND := COUNT(GROUP,%Closest%.Diff_LOCKED_IND);
    Count_Diff_WIP_IND := COUNT(GROUP,%Closest%.Diff_WIP_IND);
    Count_Diff_COMPLETE_IND := COUNT(GROUP,%Closest%.Diff_COMPLETE_IND);
    Count_Diff_TARGET_DT := COUNT(GROUP,%Closest%.Diff_TARGET_DT);
    Count_Diff_EXPECTED_DT := COUNT(GROUP,%Closest%.Diff_EXPECTED_DT);
    Count_Diff_COMPLETE_DT := COUNT(GROUP,%Closest%.Diff_COMPLETE_DT);
    Count_Diff_COMMENTS := COUNT(GROUP,%Closest%.Diff_COMMENTS);
    Count_Diff_COMMENTS_BILLING := COUNT(GROUP,%Closest%.Diff_COMMENTS_BILLING);
    Count_Diff_PRINTED_IND := COUNT(GROUP,%Closest%.Diff_PRINTED_IND);
    Count_Diff_GROUP_NBR := COUNT(GROUP,%Closest%.Diff_GROUP_NBR);
    Count_Diff_SUBGROUP_NBR := COUNT(GROUP,%Closest%.Diff_SUBGROUP_NBR);
    Count_Diff_PART_NBR := COUNT(GROUP,%Closest%.Diff_PART_NBR);
    Count_Diff_CUSTOM_DESCR := COUNT(GROUP,%Closest%.Diff_CUSTOM_DESCR);
    Count_Diff_PRICE_ITEM_DESCR := COUNT(GROUP,%Closest%.Diff_PRICE_ITEM_DESCR);
    Count_Diff_CSUS_EMP_NBR := COUNT(GROUP,%Closest%.Diff_CSUS_EMP_NBR);
    Count_Diff_CSUS_ACTION := COUNT(GROUP,%Closest%.Diff_CSUS_ACTION);
    Count_Diff_CSUS_TRIGGER_PART := COUNT(GROUP,%Closest%.Diff_CSUS_TRIGGER_PART);
    Count_Diff_PART_WIDTH := COUNT(GROUP,%Closest%.Diff_PART_WIDTH);
    Count_Diff_PART_WIDTH_UOM := COUNT(GROUP,%Closest%.Diff_PART_WIDTH_UOM);
    Count_Diff_PART_LENGTH := COUNT(GROUP,%Closest%.Diff_PART_LENGTH);
    Count_Diff_PART_LENGTH_UOM := COUNT(GROUP,%Closest%.Diff_PART_LENGTH_UOM);
    Count_Diff_PART_SQ_FEET := COUNT(GROUP,%Closest%.Diff_PART_SQ_FEET);
    Count_Diff_DIM_EDITABLE_IND := COUNT(GROUP,%Closest%.Diff_DIM_EDITABLE_IND);
    Count_Diff_TAX_IND := COUNT(GROUP,%Closest%.Diff_TAX_IND);
    Count_Diff_TELECOM_IND := COUNT(GROUP,%Closest%.Diff_TELECOM_IND);
    Count_Diff_LA_PARISH_TAX_IND := COUNT(GROUP,%Closest%.Diff_LA_PARISH_TAX_IND);
    Count_Diff_SELLABLE_IND := COUNT(GROUP,%Closest%.Diff_SELLABLE_IND);
    Count_Diff_GST_TAXABLE_IND := COUNT(GROUP,%Closest%.Diff_GST_TAXABLE_IND);
    Count_Diff_HST_TAXABLE_IND := COUNT(GROUP,%Closest%.Diff_HST_TAXABLE_IND);
    Count_Diff_PST_TAXABLE_IND := COUNT(GROUP,%Closest%.Diff_PST_TAXABLE_IND);
    Count_Diff_GST_TAX_TAX_IND := COUNT(GROUP,%Closest%.Diff_GST_TAX_TAX_IND);
    Count_Diff_UOM := COUNT(GROUP,%Closest%.Diff_UOM);
    Count_Diff_MIN_QTY := COUNT(GROUP,%Closest%.Diff_MIN_QTY);
    Count_Diff_CUST_TAX_EXEMPT_IND := COUNT(GROUP,%Closest%.Diff_CUST_TAX_EXEMPT_IND);
    Count_Diff_CUST_GST_EXEMPT_IND := COUNT(GROUP,%Closest%.Diff_CUST_GST_EXEMPT_IND);
    Count_Diff_CUST_HST_EXEMPT_IND := COUNT(GROUP,%Closest%.Diff_CUST_HST_EXEMPT_IND);
    Count_Diff_CUST_PST_EXEMPT_IND := COUNT(GROUP,%Closest%.Diff_CUST_PST_EXEMPT_IND);
    Count_Diff_CUST_GLOBAL_EXEMPT_IND := COUNT(GROUP,%Closest%.Diff_CUST_GLOBAL_EXEMPT_IND);
    Count_Diff_CUSTOMER_TYPE := COUNT(GROUP,%Closest%.Diff_CUSTOMER_TYPE);
    Count_Diff_BILL_TO_NAME := COUNT(GROUP,%Closest%.Diff_BILL_TO_NAME);
    Count_Diff_BILL_TO_CREDIT_STATUS := COUNT(GROUP,%Closest%.Diff_BILL_TO_CREDIT_STATUS);
    Count_Diff_EMS_ORDER_IND := COUNT(GROUP,%Closest%.Diff_EMS_ORDER_IND);
    Count_Diff_USER_ID := COUNT(GROUP,%Closest%.Diff_USER_ID);
    Count_Diff_LAST_UPDATE_DT := COUNT(GROUP,%Closest%.Diff_LAST_UPDATE_DT);
    Count_Diff_FET_SHIPMENT_NBR := COUNT(GROUP,%Closest%.Diff_FET_SHIPMENT_NBR);
    Count_Diff_MHA_KEY := COUNT(GROUP,%Closest%.Diff_MHA_KEY);
    Count_Diff_MANUAL_MHA_NBR := COUNT(GROUP,%Closest%.Diff_MANUAL_MHA_NBR);
    Count_Diff_DESTINATION := COUNT(GROUP,%Closest%.Diff_DESTINATION);
    Count_Diff_PIECES := COUNT(GROUP,%Closest%.Diff_PIECES);
    Count_Diff_WEIGHT := COUNT(GROUP,%Closest%.Diff_WEIGHT);
    Count_Diff_RECEIVER_IND := COUNT(GROUP,%Closest%.Diff_RECEIVER_IND);
    Count_Diff_ACCOUNTING_CODE := COUNT(GROUP,%Closest%.Diff_ACCOUNTING_CODE);
    Count_Diff_SHOW_SITE_ORDER := COUNT(GROUP,%Closest%.Diff_SHOW_SITE_ORDER);
    Count_Diff_SHOW_SITE_REVISION := COUNT(GROUP,%Closest%.Diff_SHOW_SITE_REVISION);
    Count_Diff_ORDERWIP := COUNT(GROUP,%Closest%.Diff_ORDERWIP);
    Count_Diff_FOL_ORDER_IND := COUNT(GROUP,%Closest%.Diff_FOL_ORDER_IND);
    Count_Diff_ESS_ORDER_IND := COUNT(GROUP,%Closest%.Diff_ESS_ORDER_IND);
  END;
  out_counts := table(%Closest%,%AggRec%,true);
ENDMACRO;
END;
