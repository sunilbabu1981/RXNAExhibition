IMPORT ut,SALT28;
EXPORT Fields := MODULE
EXPORT SALT28.StrType FieldName(UNSIGNED2 i) := CHOOSE(i,'BOOTH_ID','KEYVAL','SHOW_KEY','AREA_KEY','CUSTOMER_KEY','BILL_TO','BOOTH_KEY','CARRIER_KEY','COMPLETE_IND','DESCRIPTION','DROP_TRAILER_IND','UNCRATED_IND','OFF_TARGET_IND','PRO_NBR','FACILITY_KEY','LOCATION_KEY','C_WT','QTY_BUNDLES','QTY_CARPETS','QTY_CARTONS','QTY_CASES','QTY_CRATES','QTY_MACHINES','QTY_PADS','QTY_PIECES','QTY_SKIDS','RECEIVED_BY','RECEIVED_LOCATION','RECEIVED_DT','SHIPPER','SPECIAL_HANDL_IND','STORAGE_LOC','TARGET_DT','TOTAL_PIECE_COUNT','TOTAL_WEIGHT','TOTAL_REWEIGH','TOTAL_PRICE','TRAILER_NUM','TRUCK_NUM','INVOICE_KEY','TRANSACTION_KEY','COMMENTS','COMMENTS_BILLING','USER_ID','LAST_UPDATE_DT','MULTIPLE_SHIPMENTS','CREDIT_RECEIVER','MANUAL_RECEIVER_NBR','HOLD_CONFIRM_EMAIL_IND','HOLD_PRESSED_IND','SCAN_IND','ORIGINAL_RECEIVER_NBR');
EXPORT FieldNum(SALT28.StrType fn) := CASE(fn,'BOOTH_ID' => 1,'KEYVAL' => 2,'SHOW_KEY' => 3,'AREA_KEY' => 4,'CUSTOMER_KEY' => 5,'BILL_TO' => 6,'BOOTH_KEY' => 7,'CARRIER_KEY' => 8,'COMPLETE_IND' => 9,'DESCRIPTION' => 10,'DROP_TRAILER_IND' => 11,'UNCRATED_IND' => 12,'OFF_TARGET_IND' => 13,'PRO_NBR' => 14,'FACILITY_KEY' => 15,'LOCATION_KEY' => 16,'C_WT' => 17,'QTY_BUNDLES' => 18,'QTY_CARPETS' => 19,'QTY_CARTONS' => 20,'QTY_CASES' => 21,'QTY_CRATES' => 22,'QTY_MACHINES' => 23,'QTY_PADS' => 24,'QTY_PIECES' => 25,'QTY_SKIDS' => 26,'RECEIVED_BY' => 27,'RECEIVED_LOCATION' => 28,'RECEIVED_DT' => 29,'SHIPPER' => 30,'SPECIAL_HANDL_IND' => 31,'STORAGE_LOC' => 32,'TARGET_DT' => 33,'TOTAL_PIECE_COUNT' => 34,'TOTAL_WEIGHT' => 35,'TOTAL_REWEIGH' => 36,'TOTAL_PRICE' => 37,'TRAILER_NUM' => 38,'TRUCK_NUM' => 39,'INVOICE_KEY' => 40,'TRANSACTION_KEY' => 41,'COMMENTS' => 42,'COMMENTS_BILLING' => 43,'USER_ID' => 44,'LAST_UPDATE_DT' => 45,'MULTIPLE_SHIPMENTS' => 46,'CREDIT_RECEIVER' => 47,'MANUAL_RECEIVER_NBR' => 48,'HOLD_CONFIRM_EMAIL_IND' => 49,'HOLD_PRESSED_IND' => 50,'SCAN_IND' => 51,'ORIGINAL_RECEIVER_NBR' => 52,0);
//Individual field level validation
EXPORT Make_BOOTH_ID(SALT28.StrType s0) := s0;
EXPORT InValid_BOOTH_ID(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BOOTH_ID(UNSIGNED1 wh) := '';
EXPORT Make_KEYVAL(SALT28.StrType s0) := s0;
EXPORT InValid_KEYVAL(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_KEYVAL(UNSIGNED1 wh) := '';
EXPORT Make_SHOW_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_SHOW_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_SHOW_KEY(UNSIGNED1 wh) := '';
EXPORT Make_AREA_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_AREA_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_AREA_KEY(UNSIGNED1 wh) := '';
EXPORT Make_CUSTOMER_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_CUSTOMER_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CUSTOMER_KEY(UNSIGNED1 wh) := '';
EXPORT Make_BILL_TO(SALT28.StrType s0) := s0;
EXPORT InValid_BILL_TO(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BILL_TO(UNSIGNED1 wh) := '';
EXPORT Make_BOOTH_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_BOOTH_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_BOOTH_KEY(UNSIGNED1 wh) := '';
EXPORT Make_CARRIER_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_CARRIER_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CARRIER_KEY(UNSIGNED1 wh) := '';
EXPORT Make_COMPLETE_IND(SALT28.StrType s0) := s0;
EXPORT InValid_COMPLETE_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_COMPLETE_IND(UNSIGNED1 wh) := '';
EXPORT Make_DESCRIPTION(SALT28.StrType s0) := s0;
EXPORT InValid_DESCRIPTION(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_DESCRIPTION(UNSIGNED1 wh) := '';
EXPORT Make_DROP_TRAILER_IND(SALT28.StrType s0) := s0;
EXPORT InValid_DROP_TRAILER_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_DROP_TRAILER_IND(UNSIGNED1 wh) := '';
EXPORT Make_UNCRATED_IND(SALT28.StrType s0) := s0;
EXPORT InValid_UNCRATED_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_UNCRATED_IND(UNSIGNED1 wh) := '';
EXPORT Make_OFF_TARGET_IND(SALT28.StrType s0) := s0;
EXPORT InValid_OFF_TARGET_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_OFF_TARGET_IND(UNSIGNED1 wh) := '';
EXPORT Make_PRO_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_PRO_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_PRO_NBR(UNSIGNED1 wh) := '';
EXPORT Make_FACILITY_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_FACILITY_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_FACILITY_KEY(UNSIGNED1 wh) := '';
EXPORT Make_LOCATION_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_LOCATION_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_LOCATION_KEY(UNSIGNED1 wh) := '';
EXPORT Make_C_WT(SALT28.StrType s0) := s0;
EXPORT InValid_C_WT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_C_WT(UNSIGNED1 wh) := '';
EXPORT Make_QTY_BUNDLES(SALT28.StrType s0) := s0;
EXPORT InValid_QTY_BUNDLES(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QTY_BUNDLES(UNSIGNED1 wh) := '';
EXPORT Make_QTY_CARPETS(SALT28.StrType s0) := s0;
EXPORT InValid_QTY_CARPETS(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QTY_CARPETS(UNSIGNED1 wh) := '';
EXPORT Make_QTY_CARTONS(SALT28.StrType s0) := s0;
EXPORT InValid_QTY_CARTONS(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QTY_CARTONS(UNSIGNED1 wh) := '';
EXPORT Make_QTY_CASES(SALT28.StrType s0) := s0;
EXPORT InValid_QTY_CASES(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QTY_CASES(UNSIGNED1 wh) := '';
EXPORT Make_QTY_CRATES(SALT28.StrType s0) := s0;
EXPORT InValid_QTY_CRATES(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QTY_CRATES(UNSIGNED1 wh) := '';
EXPORT Make_QTY_MACHINES(SALT28.StrType s0) := s0;
EXPORT InValid_QTY_MACHINES(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QTY_MACHINES(UNSIGNED1 wh) := '';
EXPORT Make_QTY_PADS(SALT28.StrType s0) := s0;
EXPORT InValid_QTY_PADS(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QTY_PADS(UNSIGNED1 wh) := '';
EXPORT Make_QTY_PIECES(SALT28.StrType s0) := s0;
EXPORT InValid_QTY_PIECES(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QTY_PIECES(UNSIGNED1 wh) := '';
EXPORT Make_QTY_SKIDS(SALT28.StrType s0) := s0;
EXPORT InValid_QTY_SKIDS(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_QTY_SKIDS(UNSIGNED1 wh) := '';
EXPORT Make_RECEIVED_BY(SALT28.StrType s0) := s0;
EXPORT InValid_RECEIVED_BY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_RECEIVED_BY(UNSIGNED1 wh) := '';
EXPORT Make_RECEIVED_LOCATION(SALT28.StrType s0) := s0;
EXPORT InValid_RECEIVED_LOCATION(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_RECEIVED_LOCATION(UNSIGNED1 wh) := '';
EXPORT Make_RECEIVED_DT(SALT28.StrType s0) := s0;
EXPORT InValid_RECEIVED_DT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_RECEIVED_DT(UNSIGNED1 wh) := '';
EXPORT Make_SHIPPER(SALT28.StrType s0) := s0;
EXPORT InValid_SHIPPER(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_SHIPPER(UNSIGNED1 wh) := '';
EXPORT Make_SPECIAL_HANDL_IND(SALT28.StrType s0) := s0;
EXPORT InValid_SPECIAL_HANDL_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_SPECIAL_HANDL_IND(UNSIGNED1 wh) := '';
EXPORT Make_STORAGE_LOC(SALT28.StrType s0) := s0;
EXPORT InValid_STORAGE_LOC(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_STORAGE_LOC(UNSIGNED1 wh) := '';
EXPORT Make_TARGET_DT(SALT28.StrType s0) := s0;
EXPORT InValid_TARGET_DT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TARGET_DT(UNSIGNED1 wh) := '';
EXPORT Make_TOTAL_PIECE_COUNT(SALT28.StrType s0) := s0;
EXPORT InValid_TOTAL_PIECE_COUNT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TOTAL_PIECE_COUNT(UNSIGNED1 wh) := '';
EXPORT Make_TOTAL_WEIGHT(SALT28.StrType s0) := s0;
EXPORT InValid_TOTAL_WEIGHT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TOTAL_WEIGHT(UNSIGNED1 wh) := '';
EXPORT Make_TOTAL_REWEIGH(SALT28.StrType s0) := s0;
EXPORT InValid_TOTAL_REWEIGH(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TOTAL_REWEIGH(UNSIGNED1 wh) := '';
EXPORT Make_TOTAL_PRICE(SALT28.StrType s0) := s0;
EXPORT InValid_TOTAL_PRICE(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TOTAL_PRICE(UNSIGNED1 wh) := '';
EXPORT Make_TRAILER_NUM(SALT28.StrType s0) := s0;
EXPORT InValid_TRAILER_NUM(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TRAILER_NUM(UNSIGNED1 wh) := '';
EXPORT Make_TRUCK_NUM(SALT28.StrType s0) := s0;
EXPORT InValid_TRUCK_NUM(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TRUCK_NUM(UNSIGNED1 wh) := '';
EXPORT Make_INVOICE_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_INVOICE_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_INVOICE_KEY(UNSIGNED1 wh) := '';
EXPORT Make_TRANSACTION_KEY(SALT28.StrType s0) := s0;
EXPORT InValid_TRANSACTION_KEY(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_TRANSACTION_KEY(UNSIGNED1 wh) := '';
EXPORT Make_COMMENTS(SALT28.StrType s0) := s0;
EXPORT InValid_COMMENTS(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_COMMENTS(UNSIGNED1 wh) := '';
EXPORT Make_COMMENTS_BILLING(SALT28.StrType s0) := s0;
EXPORT InValid_COMMENTS_BILLING(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_COMMENTS_BILLING(UNSIGNED1 wh) := '';
EXPORT Make_USER_ID(SALT28.StrType s0) := s0;
EXPORT InValid_USER_ID(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_USER_ID(UNSIGNED1 wh) := '';
EXPORT Make_LAST_UPDATE_DT(SALT28.StrType s0) := s0;
EXPORT InValid_LAST_UPDATE_DT(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_LAST_UPDATE_DT(UNSIGNED1 wh) := '';
EXPORT Make_MULTIPLE_SHIPMENTS(SALT28.StrType s0) := s0;
EXPORT InValid_MULTIPLE_SHIPMENTS(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_MULTIPLE_SHIPMENTS(UNSIGNED1 wh) := '';
EXPORT Make_CREDIT_RECEIVER(SALT28.StrType s0) := s0;
EXPORT InValid_CREDIT_RECEIVER(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_CREDIT_RECEIVER(UNSIGNED1 wh) := '';
EXPORT Make_MANUAL_RECEIVER_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_MANUAL_RECEIVER_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_MANUAL_RECEIVER_NBR(UNSIGNED1 wh) := '';
EXPORT Make_HOLD_CONFIRM_EMAIL_IND(SALT28.StrType s0) := s0;
EXPORT InValid_HOLD_CONFIRM_EMAIL_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_HOLD_CONFIRM_EMAIL_IND(UNSIGNED1 wh) := '';
EXPORT Make_HOLD_PRESSED_IND(SALT28.StrType s0) := s0;
EXPORT InValid_HOLD_PRESSED_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_HOLD_PRESSED_IND(UNSIGNED1 wh) := '';
EXPORT Make_SCAN_IND(SALT28.StrType s0) := s0;
EXPORT InValid_SCAN_IND(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_SCAN_IND(UNSIGNED1 wh) := '';
EXPORT Make_ORIGINAL_RECEIVER_NBR(SALT28.StrType s0) := s0;
EXPORT InValid_ORIGINAL_RECEIVER_NBR(SALT28.StrType s) := FALSE;
EXPORT InValidMessage_ORIGINAL_RECEIVER_NBR(UNSIGNED1 wh) := '';
// This macro will compute and count field level differences based upon a pivot expression
export MAC_CountDifferencesByPivot(in_left,in_right,pivot_exp,bad_pivots,out_counts) := MACRO
  IMPORT SALT28,Exhibition_ReedFreightData;
//Find those highly occuring pivot values to remove them from consideration
#uniquename(tr)
  %tr% := table(in_left+in_right,{ val := pivot_exp; });
#uniquename(r1)
  %r1% := record
    %tr%.val;    unsigned Cnt := COUNT(GROUP);
  end;
#uniquename(t1)
  %t1% := table(%tr%,%r1%,val,local); // Pre-aggregate before distribute
#uniquename(r2)
  %r2% := record
    %t1%.val;    unsigned Cnt := SUM(GROUP,%t1%.Cnt);
  end;
#uniquename(t2)
  %t2% := table(%t1%,%r2%,val); // Now do global aggregate
Bad_Pivots := %t2%(Cnt>100);
#uniquename(dl)
  %dl% := RECORD
    BOOLEAN Diff_BOOTH_ID;
    BOOLEAN Diff_KEYVAL;
    BOOLEAN Diff_SHOW_KEY;
    BOOLEAN Diff_AREA_KEY;
    BOOLEAN Diff_CUSTOMER_KEY;
    BOOLEAN Diff_BILL_TO;
    BOOLEAN Diff_BOOTH_KEY;
    BOOLEAN Diff_CARRIER_KEY;
    BOOLEAN Diff_COMPLETE_IND;
    BOOLEAN Diff_DESCRIPTION;
    BOOLEAN Diff_DROP_TRAILER_IND;
    BOOLEAN Diff_UNCRATED_IND;
    BOOLEAN Diff_OFF_TARGET_IND;
    BOOLEAN Diff_PRO_NBR;
    BOOLEAN Diff_FACILITY_KEY;
    BOOLEAN Diff_LOCATION_KEY;
    BOOLEAN Diff_C_WT;
    BOOLEAN Diff_QTY_BUNDLES;
    BOOLEAN Diff_QTY_CARPETS;
    BOOLEAN Diff_QTY_CARTONS;
    BOOLEAN Diff_QTY_CASES;
    BOOLEAN Diff_QTY_CRATES;
    BOOLEAN Diff_QTY_MACHINES;
    BOOLEAN Diff_QTY_PADS;
    BOOLEAN Diff_QTY_PIECES;
    BOOLEAN Diff_QTY_SKIDS;
    BOOLEAN Diff_RECEIVED_BY;
    BOOLEAN Diff_RECEIVED_LOCATION;
    BOOLEAN Diff_RECEIVED_DT;
    BOOLEAN Diff_SHIPPER;
    BOOLEAN Diff_SPECIAL_HANDL_IND;
    BOOLEAN Diff_STORAGE_LOC;
    BOOLEAN Diff_TARGET_DT;
    BOOLEAN Diff_TOTAL_PIECE_COUNT;
    BOOLEAN Diff_TOTAL_WEIGHT;
    BOOLEAN Diff_TOTAL_REWEIGH;
    BOOLEAN Diff_TOTAL_PRICE;
    BOOLEAN Diff_TRAILER_NUM;
    BOOLEAN Diff_TRUCK_NUM;
    BOOLEAN Diff_INVOICE_KEY;
    BOOLEAN Diff_TRANSACTION_KEY;
    BOOLEAN Diff_COMMENTS;
    BOOLEAN Diff_COMMENTS_BILLING;
    BOOLEAN Diff_USER_ID;
    BOOLEAN Diff_LAST_UPDATE_DT;
    BOOLEAN Diff_MULTIPLE_SHIPMENTS;
    BOOLEAN Diff_CREDIT_RECEIVER;
    BOOLEAN Diff_MANUAL_RECEIVER_NBR;
    BOOLEAN Diff_HOLD_CONFIRM_EMAIL_IND;
    BOOLEAN Diff_HOLD_PRESSED_IND;
    BOOLEAN Diff_SCAN_IND;
    BOOLEAN Diff_ORIGINAL_RECEIVER_NBR;
    UNSIGNED Num_Diffs;
    SALT28.StrType Val {MAXLENGTH(1024)};
  END;
#uniquename(fd)
  %dl% %fd%(in_left le,in_right ri) := TRANSFORM
    SELF.Diff_BOOTH_ID := le.BOOTH_ID <> ri.BOOTH_ID;
    SELF.Diff_KEYVAL := le.KEYVAL <> ri.KEYVAL;
    SELF.Diff_SHOW_KEY := le.SHOW_KEY <> ri.SHOW_KEY;
    SELF.Diff_AREA_KEY := le.AREA_KEY <> ri.AREA_KEY;
    SELF.Diff_CUSTOMER_KEY := le.CUSTOMER_KEY <> ri.CUSTOMER_KEY;
    SELF.Diff_BILL_TO := le.BILL_TO <> ri.BILL_TO;
    SELF.Diff_BOOTH_KEY := le.BOOTH_KEY <> ri.BOOTH_KEY;
    SELF.Diff_CARRIER_KEY := le.CARRIER_KEY <> ri.CARRIER_KEY;
    SELF.Diff_COMPLETE_IND := le.COMPLETE_IND <> ri.COMPLETE_IND;
    SELF.Diff_DESCRIPTION := le.DESCRIPTION <> ri.DESCRIPTION;
    SELF.Diff_DROP_TRAILER_IND := le.DROP_TRAILER_IND <> ri.DROP_TRAILER_IND;
    SELF.Diff_UNCRATED_IND := le.UNCRATED_IND <> ri.UNCRATED_IND;
    SELF.Diff_OFF_TARGET_IND := le.OFF_TARGET_IND <> ri.OFF_TARGET_IND;
    SELF.Diff_PRO_NBR := le.PRO_NBR <> ri.PRO_NBR;
    SELF.Diff_FACILITY_KEY := le.FACILITY_KEY <> ri.FACILITY_KEY;
    SELF.Diff_LOCATION_KEY := le.LOCATION_KEY <> ri.LOCATION_KEY;
    SELF.Diff_C_WT := le.C_WT <> ri.C_WT;
    SELF.Diff_QTY_BUNDLES := le.QTY_BUNDLES <> ri.QTY_BUNDLES;
    SELF.Diff_QTY_CARPETS := le.QTY_CARPETS <> ri.QTY_CARPETS;
    SELF.Diff_QTY_CARTONS := le.QTY_CARTONS <> ri.QTY_CARTONS;
    SELF.Diff_QTY_CASES := le.QTY_CASES <> ri.QTY_CASES;
    SELF.Diff_QTY_CRATES := le.QTY_CRATES <> ri.QTY_CRATES;
    SELF.Diff_QTY_MACHINES := le.QTY_MACHINES <> ri.QTY_MACHINES;
    SELF.Diff_QTY_PADS := le.QTY_PADS <> ri.QTY_PADS;
    SELF.Diff_QTY_PIECES := le.QTY_PIECES <> ri.QTY_PIECES;
    SELF.Diff_QTY_SKIDS := le.QTY_SKIDS <> ri.QTY_SKIDS;
    SELF.Diff_RECEIVED_BY := le.RECEIVED_BY <> ri.RECEIVED_BY;
    SELF.Diff_RECEIVED_LOCATION := le.RECEIVED_LOCATION <> ri.RECEIVED_LOCATION;
    SELF.Diff_RECEIVED_DT := le.RECEIVED_DT <> ri.RECEIVED_DT;
    SELF.Diff_SHIPPER := le.SHIPPER <> ri.SHIPPER;
    SELF.Diff_SPECIAL_HANDL_IND := le.SPECIAL_HANDL_IND <> ri.SPECIAL_HANDL_IND;
    SELF.Diff_STORAGE_LOC := le.STORAGE_LOC <> ri.STORAGE_LOC;
    SELF.Diff_TARGET_DT := le.TARGET_DT <> ri.TARGET_DT;
    SELF.Diff_TOTAL_PIECE_COUNT := le.TOTAL_PIECE_COUNT <> ri.TOTAL_PIECE_COUNT;
    SELF.Diff_TOTAL_WEIGHT := le.TOTAL_WEIGHT <> ri.TOTAL_WEIGHT;
    SELF.Diff_TOTAL_REWEIGH := le.TOTAL_REWEIGH <> ri.TOTAL_REWEIGH;
    SELF.Diff_TOTAL_PRICE := le.TOTAL_PRICE <> ri.TOTAL_PRICE;
    SELF.Diff_TRAILER_NUM := le.TRAILER_NUM <> ri.TRAILER_NUM;
    SELF.Diff_TRUCK_NUM := le.TRUCK_NUM <> ri.TRUCK_NUM;
    SELF.Diff_INVOICE_KEY := le.INVOICE_KEY <> ri.INVOICE_KEY;
    SELF.Diff_TRANSACTION_KEY := le.TRANSACTION_KEY <> ri.TRANSACTION_KEY;
    SELF.Diff_COMMENTS := le.COMMENTS <> ri.COMMENTS;
    SELF.Diff_COMMENTS_BILLING := le.COMMENTS_BILLING <> ri.COMMENTS_BILLING;
    SELF.Diff_USER_ID := le.USER_ID <> ri.USER_ID;
    SELF.Diff_LAST_UPDATE_DT := le.LAST_UPDATE_DT <> ri.LAST_UPDATE_DT;
    SELF.Diff_MULTIPLE_SHIPMENTS := le.MULTIPLE_SHIPMENTS <> ri.MULTIPLE_SHIPMENTS;
    SELF.Diff_CREDIT_RECEIVER := le.CREDIT_RECEIVER <> ri.CREDIT_RECEIVER;
    SELF.Diff_MANUAL_RECEIVER_NBR := le.MANUAL_RECEIVER_NBR <> ri.MANUAL_RECEIVER_NBR;
    SELF.Diff_HOLD_CONFIRM_EMAIL_IND := le.HOLD_CONFIRM_EMAIL_IND <> ri.HOLD_CONFIRM_EMAIL_IND;
    SELF.Diff_HOLD_PRESSED_IND := le.HOLD_PRESSED_IND <> ri.HOLD_PRESSED_IND;
    SELF.Diff_SCAN_IND := le.SCAN_IND <> ri.SCAN_IND;
    SELF.Diff_ORIGINAL_RECEIVER_NBR := le.ORIGINAL_RECEIVER_NBR <> ri.ORIGINAL_RECEIVER_NBR;
    SELF.Val := (SALT28.StrType)evaluate(le,pivot_exp);
    SELF.Num_Diffs := 0+ IF( SELF.Diff_BOOTH_ID,1,0)+ IF( SELF.Diff_KEYVAL,1,0)+ IF( SELF.Diff_SHOW_KEY,1,0)+ IF( SELF.Diff_AREA_KEY,1,0)+ IF( SELF.Diff_CUSTOMER_KEY,1,0)+ IF( SELF.Diff_BILL_TO,1,0)+ IF( SELF.Diff_BOOTH_KEY,1,0)+ IF( SELF.Diff_CARRIER_KEY,1,0)+ IF( SELF.Diff_COMPLETE_IND,1,0)+ IF( SELF.Diff_DESCRIPTION,1,0)+ IF( SELF.Diff_DROP_TRAILER_IND,1,0)+ IF( SELF.Diff_UNCRATED_IND,1,0)+ IF( SELF.Diff_OFF_TARGET_IND,1,0)+ IF( SELF.Diff_PRO_NBR,1,0)+ IF( SELF.Diff_FACILITY_KEY,1,0)+ IF( SELF.Diff_LOCATION_KEY,1,0)+ IF( SELF.Diff_C_WT,1,0)+ IF( SELF.Diff_QTY_BUNDLES,1,0)+ IF( SELF.Diff_QTY_CARPETS,1,0)+ IF( SELF.Diff_QTY_CARTONS,1,0)+ IF( SELF.Diff_QTY_CASES,1,0)+ IF( SELF.Diff_QTY_CRATES,1,0)+ IF( SELF.Diff_QTY_MACHINES,1,0)+ IF( SELF.Diff_QTY_PADS,1,0)+ IF( SELF.Diff_QTY_PIECES,1,0)+ IF( SELF.Diff_QTY_SKIDS,1,0)+ IF( SELF.Diff_RECEIVED_BY,1,0)+ IF( SELF.Diff_RECEIVED_LOCATION,1,0)+ IF( SELF.Diff_RECEIVED_DT,1,0)+ IF( SELF.Diff_SHIPPER,1,0)+ IF( SELF.Diff_SPECIAL_HANDL_IND,1,0)+ IF( SELF.Diff_STORAGE_LOC,1,0)+ IF( SELF.Diff_TARGET_DT,1,0)+ IF( SELF.Diff_TOTAL_PIECE_COUNT,1,0)+ IF( SELF.Diff_TOTAL_WEIGHT,1,0)+ IF( SELF.Diff_TOTAL_REWEIGH,1,0)+ IF( SELF.Diff_TOTAL_PRICE,1,0)+ IF( SELF.Diff_TRAILER_NUM,1,0)+ IF( SELF.Diff_TRUCK_NUM,1,0)+ IF( SELF.Diff_INVOICE_KEY,1,0)+ IF( SELF.Diff_TRANSACTION_KEY,1,0)+ IF( SELF.Diff_COMMENTS,1,0)+ IF( SELF.Diff_COMMENTS_BILLING,1,0)+ IF( SELF.Diff_USER_ID,1,0)+ IF( SELF.Diff_LAST_UPDATE_DT,1,0)+ IF( SELF.Diff_MULTIPLE_SHIPMENTS,1,0)+ IF( SELF.Diff_CREDIT_RECEIVER,1,0)+ IF( SELF.Diff_MANUAL_RECEIVER_NBR,1,0)+ IF( SELF.Diff_HOLD_CONFIRM_EMAIL_IND,1,0)+ IF( SELF.Diff_HOLD_PRESSED_IND,1,0)+ IF( SELF.Diff_SCAN_IND,1,0)+ IF( SELF.Diff_ORIGINAL_RECEIVER_NBR,1,0);
  END;
// Now need to remove bad pivots from comparison
#uniquename(L)
  %L% := JOIN(in_left,bad_pivots,evaluate(LEFT,pivot_exp)=right.val,transform(left),left only,lookup);
#uniquename(R)
  %R% := JOIN(in_right,bad_pivots,evaluate(LEFT,pivot_exp)=right.val,transform(left),left only,lookup);
#uniquename(DiffL)
  %DiffL% := JOIN(%L%,%R%,evaluate(left,pivot_exp)=evaluate(right,pivot_exp),%fd%(left,right),hash);
#uniquename(Closest)
  %Closest% := DEDUP(SORT(%DiffL%,Val,Num_Diffs,local),Val,local); // Join will have distributed by pivot_exp
#uniquename(AggRec)
  %AggRec% := RECORD
    Count_Diff_BOOTH_ID := COUNT(GROUP,%Closest%.Diff_BOOTH_ID);
    Count_Diff_KEYVAL := COUNT(GROUP,%Closest%.Diff_KEYVAL);
    Count_Diff_SHOW_KEY := COUNT(GROUP,%Closest%.Diff_SHOW_KEY);
    Count_Diff_AREA_KEY := COUNT(GROUP,%Closest%.Diff_AREA_KEY);
    Count_Diff_CUSTOMER_KEY := COUNT(GROUP,%Closest%.Diff_CUSTOMER_KEY);
    Count_Diff_BILL_TO := COUNT(GROUP,%Closest%.Diff_BILL_TO);
    Count_Diff_BOOTH_KEY := COUNT(GROUP,%Closest%.Diff_BOOTH_KEY);
    Count_Diff_CARRIER_KEY := COUNT(GROUP,%Closest%.Diff_CARRIER_KEY);
    Count_Diff_COMPLETE_IND := COUNT(GROUP,%Closest%.Diff_COMPLETE_IND);
    Count_Diff_DESCRIPTION := COUNT(GROUP,%Closest%.Diff_DESCRIPTION);
    Count_Diff_DROP_TRAILER_IND := COUNT(GROUP,%Closest%.Diff_DROP_TRAILER_IND);
    Count_Diff_UNCRATED_IND := COUNT(GROUP,%Closest%.Diff_UNCRATED_IND);
    Count_Diff_OFF_TARGET_IND := COUNT(GROUP,%Closest%.Diff_OFF_TARGET_IND);
    Count_Diff_PRO_NBR := COUNT(GROUP,%Closest%.Diff_PRO_NBR);
    Count_Diff_FACILITY_KEY := COUNT(GROUP,%Closest%.Diff_FACILITY_KEY);
    Count_Diff_LOCATION_KEY := COUNT(GROUP,%Closest%.Diff_LOCATION_KEY);
    Count_Diff_C_WT := COUNT(GROUP,%Closest%.Diff_C_WT);
    Count_Diff_QTY_BUNDLES := COUNT(GROUP,%Closest%.Diff_QTY_BUNDLES);
    Count_Diff_QTY_CARPETS := COUNT(GROUP,%Closest%.Diff_QTY_CARPETS);
    Count_Diff_QTY_CARTONS := COUNT(GROUP,%Closest%.Diff_QTY_CARTONS);
    Count_Diff_QTY_CASES := COUNT(GROUP,%Closest%.Diff_QTY_CASES);
    Count_Diff_QTY_CRATES := COUNT(GROUP,%Closest%.Diff_QTY_CRATES);
    Count_Diff_QTY_MACHINES := COUNT(GROUP,%Closest%.Diff_QTY_MACHINES);
    Count_Diff_QTY_PADS := COUNT(GROUP,%Closest%.Diff_QTY_PADS);
    Count_Diff_QTY_PIECES := COUNT(GROUP,%Closest%.Diff_QTY_PIECES);
    Count_Diff_QTY_SKIDS := COUNT(GROUP,%Closest%.Diff_QTY_SKIDS);
    Count_Diff_RECEIVED_BY := COUNT(GROUP,%Closest%.Diff_RECEIVED_BY);
    Count_Diff_RECEIVED_LOCATION := COUNT(GROUP,%Closest%.Diff_RECEIVED_LOCATION);
    Count_Diff_RECEIVED_DT := COUNT(GROUP,%Closest%.Diff_RECEIVED_DT);
    Count_Diff_SHIPPER := COUNT(GROUP,%Closest%.Diff_SHIPPER);
    Count_Diff_SPECIAL_HANDL_IND := COUNT(GROUP,%Closest%.Diff_SPECIAL_HANDL_IND);
    Count_Diff_STORAGE_LOC := COUNT(GROUP,%Closest%.Diff_STORAGE_LOC);
    Count_Diff_TARGET_DT := COUNT(GROUP,%Closest%.Diff_TARGET_DT);
    Count_Diff_TOTAL_PIECE_COUNT := COUNT(GROUP,%Closest%.Diff_TOTAL_PIECE_COUNT);
    Count_Diff_TOTAL_WEIGHT := COUNT(GROUP,%Closest%.Diff_TOTAL_WEIGHT);
    Count_Diff_TOTAL_REWEIGH := COUNT(GROUP,%Closest%.Diff_TOTAL_REWEIGH);
    Count_Diff_TOTAL_PRICE := COUNT(GROUP,%Closest%.Diff_TOTAL_PRICE);
    Count_Diff_TRAILER_NUM := COUNT(GROUP,%Closest%.Diff_TRAILER_NUM);
    Count_Diff_TRUCK_NUM := COUNT(GROUP,%Closest%.Diff_TRUCK_NUM);
    Count_Diff_INVOICE_KEY := COUNT(GROUP,%Closest%.Diff_INVOICE_KEY);
    Count_Diff_TRANSACTION_KEY := COUNT(GROUP,%Closest%.Diff_TRANSACTION_KEY);
    Count_Diff_COMMENTS := COUNT(GROUP,%Closest%.Diff_COMMENTS);
    Count_Diff_COMMENTS_BILLING := COUNT(GROUP,%Closest%.Diff_COMMENTS_BILLING);
    Count_Diff_USER_ID := COUNT(GROUP,%Closest%.Diff_USER_ID);
    Count_Diff_LAST_UPDATE_DT := COUNT(GROUP,%Closest%.Diff_LAST_UPDATE_DT);
    Count_Diff_MULTIPLE_SHIPMENTS := COUNT(GROUP,%Closest%.Diff_MULTIPLE_SHIPMENTS);
    Count_Diff_CREDIT_RECEIVER := COUNT(GROUP,%Closest%.Diff_CREDIT_RECEIVER);
    Count_Diff_MANUAL_RECEIVER_NBR := COUNT(GROUP,%Closest%.Diff_MANUAL_RECEIVER_NBR);
    Count_Diff_HOLD_CONFIRM_EMAIL_IND := COUNT(GROUP,%Closest%.Diff_HOLD_CONFIRM_EMAIL_IND);
    Count_Diff_HOLD_PRESSED_IND := COUNT(GROUP,%Closest%.Diff_HOLD_PRESSED_IND);
    Count_Diff_SCAN_IND := COUNT(GROUP,%Closest%.Diff_SCAN_IND);
    Count_Diff_ORIGINAL_RECEIVER_NBR := COUNT(GROUP,%Closest%.Diff_ORIGINAL_RECEIVER_NBR);
  END;
  out_counts := table(%Closest%,%AggRec%,true);
ENDMACRO;
END;
